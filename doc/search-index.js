var N=null,E="",T="t",U="u",searchIndex={};
var R=["cpython","pydict","pyobject","option","pyresult","pybool","pymodule","python","pytype","pyerr","Print a standard traceback to sys.stderr.","get_type","Creates a PyObject instance for the given FFI pointer.…","pythonobjectdowncasterror","Casts the PyObject to a concrete Python object type.…","Casts the PyObject to a concrete Python object type. Fails…","Import the Python module with the specified name.","Convert the Python string data to a Rust string.","to_string","to_string_lossy","Convert the `PyString` into a Rust string.","pystring","Converts from `PyBytes` to `PyString`. This method is only…","as_basestring","into_basestring","Converts from `PyUnicode` to `PyString`. This method is…","Gets the python string data in its underlying…","pystringdata","Convert the `PyUnicode` into a Rust string.","contains","pyiterator","Gets the Python iterator object.","get_item","Gets the item at the specified index.","set_item","c_double","pysequence","Return the result of repeating sequence object o count…","del_item","pytuple","nulerror","result","Returns a reference to the capsule data.","cpython::exc","unicodedecodeerror","cpython::oldstyle","pyinstance","Acquires the global interpreter lock, which allows access…","gilguard","cpython::buffer","cpython::buffer::ElementType","pybuffer","as_slice","Gets the buffer memory as a slice.","Copies the buffer elements to the specified slice. If the…","Copies the buffer elements to a newly allocated vector. If…","Copies the specified slice into the buffer. If the buffer…","traverseerror","cpython::py_class","as_object","into_object","Casts the Python object to PyObject.","Unchecked downcast from PyObject to Self. Undefined…","Cast from PyObject to a concrete Python object type.","Converts self into a Python object.","ordering","Compares two Python objects.","Compute the string representation of self. This is…","pyunicode","py_hash_t","Sets an item value. This is equivalent to the Python…","Deletes an item. This is equivalent to the Python…","py_class","try_from","try_into","borrow_mut","type_id","borrow","typeid","to_owned","clone_into","cpython::argparse","cpython::py_class::gc","unchecked_downcast_from","unchecked_downcast_borrow_from","downcast_from","downcast_borrow_from","pybytes","pylist","pyfloat","pycapsule","baseexception","exception","standarderror","lookuperror","assertionerror","attributeerror","eoferror","environmenterror","floatingpointerror","importerror","indexerror","keyerror","keyboardinterrupt","memoryerror","nameerror","notimplementederror","overflowerror","referenceerror","runtimeerror","syntaxerror","systemerror","systemexit","typeerror","valueerror","zerodivisionerror","buffererror","unicodeencodeerror","unicodetranslateerror","type_object","clone_ref","release_ref","to_py_object","into_py_object","with_borrowed_ptr","ioerror","oserror","pyclass","extract","elementtype","formatter","Converts self into a Python object and calls the specified…","Determines whether this object has the given attribute.…","Retrieves an attribute value. This is equivalent to the…","Sets an attribute value. This is equivalent to the Python…","Deletes an attribute. This is equivalent to the Python…","rich_compare","compareop","Compute the unicode string representation of self. This is…","is_callable","Determines whether this object is callable.","Calls the object. This is equivalent to the Python…","call_method","Calls a method on the object. This is equivalent to the…","Retrieves the hash code of the object. This is equivalent…","Returns whether the object is considered to be true. This…","Returns the length of the sequence or mapping. This is…","This is equivalent to the Python expression: 'self[key]'","Takes an object and returns an iterator for it. This is…","PythonObjectDowncastError","PyStringData","PyUnicode","PyIterator","PySequence","PyCapsule","UnicodeDecodeError","GILProtected","ParamDescription","ElementType","ReadOnlyCell","CompareOp","VisitProc","PythonObjectFromPyClassMacro","BaseObject","PythonObject","PythonObjectWithCheckedDowncast","PythonObjectWithTypeObject","FromPyObject","RefFromPyObject","ToPyObject","ObjectProtocol","BaseException","Exception","StandardError","LookupError","AssertionError","AttributeError","EnvironmentError","FloatingPointError","ImportError","IndexError","KeyboardInterrupt","MemoryError","NameError","NotImplementedError","OverflowError","ReferenceError","RuntimeError","SyntaxError","SystemError","SystemExit","TypeError","ValueError","ZeroDivisionError","BufferError","UnicodeEncodeError","UnicodeTranslateError","PyInstance","TraverseError"];

searchIndex["cpython"]={"doc":"Rust bindings to the Python interpreter.","i":[[6,"Py_ssize_t",R[0],E,N,N],[3,"PyErr",E,"Represents a Python exception that was raised.",N,N],[12,"ptype",E,"The type of the exception. This should be either a…",0,N],[12,"pvalue",E,"The value of the exception.",0,N],[12,"ptraceback",E,"The `PyTraceBack` object associated with the error.",0,N],[3,"PyObject",E,"Represents a reference to a Python object.",N,N],[3,"PyType",E,"Represents a reference to a Python type object.",N,N],[3,"PyModule",E,"Represents a Python module object.",N,N],[3,"PyBytes",E,"Represents a Python byte string. Corresponds to `str` in…",N,N],[3,"PyString",E,"Represents a Python string. Corresponds to `basestring` in…",N,N],[3,R[151],E,"Represents a Python unicode string. Corresponds to…",N,N],[3,R[152],E,"A python iterator object.",N,N],[3,"PyBool",E,"Represents a Python `bool`.",N,N],[3,"PyTuple",E,"Represents a Python tuple object.",N,N],[3,"NoArgs",E,"An empty struct that represents the empty argument list.…",N,N],[3,"PyDict",E,"Represents a Python `dict`.",N,N],[3,"PySet",E,"Represents a Python `set`.",N,N],[3,"PyList",E,"Represents a Python `list`.",N,N],[3,"PyInt",E,"Represents a Python `int` object.",N,N],[3,"PyLong",E,"In Python 2.x, represents a Python `long` object. In…",N,N],[3,"PyFloat",E,"Represents a Python `float` object.",N,N],[3,R[153],E,"Represents a reference to a python object supporting the…",N,N],[3,R[154],E,"Capsules are the preferred way to export/import C APIs…",N,N],[3,"Python",E,"Marker type that indicates that the GIL is currently held.",N,N],[3,R[149],E,E,N,N],[12,"0",E,E,1,N],[3,"GILGuard",E,"RAII type that represents the Global Interpreter Lock…",N,N],[3,R[156],E,"Mutex-like wrapper object for data that is protected by…",N,N],[4,R[150],E,"Enum of possible Python string representations.",N,N],[13,"Latin1",E,E,2,N],[13,"Utf8",E,E,2,N],[13,"Utf16",E,E,2,N],[13,"Utf32",E,E,2,N],[5,"prepare_freethreaded_python",E,"Prepares the use of Python in a free-threaded context.",N,[[]]],[0,"exc",E,"This module contains the python exception types.",N,N],[3,R[171],R[43],E,N,N],[3,R[172],E,E,N,N],[3,R[173],E,E,N,N],[3,R[174],E,E,N,N],[3,R[175],E,E,N,N],[3,R[176],E,E,N,N],[3,"EOFError",E,E,N,N],[3,R[177],E,E,N,N],[3,R[178],E,E,N,N],[3,"IOError",E,E,N,N],[3,R[179],E,E,N,N],[3,R[180],E,E,N,N],[3,"KeyError",E,E,N,N],[3,R[181],E,E,N,N],[3,R[182],E,E,N,N],[3,R[183],E,E,N,N],[3,R[184],E,E,N,N],[3,"OSError",E,E,N,N],[3,R[185],E,E,N,N],[3,R[186],E,E,N,N],[3,R[187],E,E,N,N],[3,R[188],E,E,N,N],[3,R[189],E,E,N,N],[3,R[190],E,E,N,N],[3,R[191],E,E,N,N],[3,R[192],E,E,N,N],[3,R[193],E,E,N,N],[3,R[194],E,E,N,N],[3,R[155],E,E,N,N],[3,R[195],E,E,N,N],[3,R[196],E,E,N,N],[0,"oldstyle",R[0],"This module contains support for old-style classes. Only…",N,N],[3,"PyClass",R[45],"Represents an old-style Python class.",N,N],[3,R[197],E,"Represents an old-style Python instance.",N,N],[11,"assume_gil_acquired",R[0],"Retrieve Python instance under the assumption that the GIL…",3,[[],[R[7]]]],[11,"acquire_gil",E,R[47],3,[[],[R[48]]]],[11,"allow_threads",E,"Temporarily releases the GIL, thus allowing other Python…",3,[[["f"]],[T]]],[11,"eval",E,"Evaluates a Python expression in the given context and…",3,[[[R[3],[R[1]]],["str"],[R[1]]],[[R[4],[R[2]]],[R[2]]]]],[11,"run",E,"Executes one or more Python statements in the given context.",3,[[[R[3],[R[1]]],["str"],[R[1]]],[R[4]]]],[11,"None",E,"Gets the Python builtin value `None`.",3,[[],[R[2]]]],[11,"True",E,"Gets the Python builtin value `True`.",3,[[],[R[5]]]],[11,"False",E,"Gets the Python builtin value `False`.",3,[[],[R[5]]]],[11,"NotImplemented",E,"Gets the Python builtin value `NotImplemented`.",3,[[],[R[2]]]],[11,R[11],E,"Gets the Python type object for type T.",3,[[],[R[8]]]],[11,"import",E,R[16],3,[[["str"]],[[R[4],[R[6]]],[R[6]]]]],[11,"new",E,"Creates a new PyErr of type `T`.",0,[[[R[7]],["v"]],[R[9]]]],[11,"occurred",E,"Gets whether an error is present in the Python…",0,[[[R[7]]],["bool"]]],[11,"new_type",E,"Creates a new exception type with the given name, which…",0,[[[R[3],[R[2]]],[R[7]],["str"],[R[2]]],[R[8]]]],[11,"fetch",E,"Retrieves the current error from the Python interpreter's…",0,[[[R[7]]],[R[9]]]],[11,"from_instance",E,"Creates a new PyErr.",0,[[["o"],[R[7]]],[R[9]]]],[11,"new_lazy_init",E,"Construct a new error, with the usual lazy initialization…",0,[[[R[8]],[R[3],[R[2]]],[R[2]]],[R[9]]]],[11,"print",E,R[10],0,[[[R[7]]]]],[11,"print_and_set_sys_last_vars",E,R[10],0,[[[R[7]]]]],[11,"matches",E,"Return true if the current exception matches the exception…",0,[[["self"],[R[7]],[T]],["bool"]]],[11,"normalize",E,"Normalizes the error. This ensures that the exception…",0,[[["self"],[R[7]]]]],[11,R[11],E,"Retrieves the exception type.",0,[[["self"],[R[7]]],[R[8]]]],[11,"instance",E,"Retrieves the exception instance for this error. This…",0,[[["self"],[R[7]]],[R[2]]]],[11,"restore",E,"Writes the error back to the Python interpreter's global…",0,[[[R[7]]]]],[11,"warn",E,"Issue a warning message. May return a PyErr if…",0,[[[R[7]],["str"],["i32"],[R[2]]],[R[4]]]],[11,"from_owned_ptr",E,R[12],4,[[[R[7]]],[R[2]]]],[11,"from_borrowed_ptr",E,R[12],4,[[[R[7]]],[R[2]]]],[11,"from_owned_ptr_opt",E,R[12],4,[[[R[7]]],[[R[3],[R[2]]],[R[2]]]]],[11,"from_borrowed_ptr_opt",E,"Returns None for null pointers; undefined behavior if the…",4,[[[R[7]]],[[R[3],[R[2]]],[R[2]]]]],[11,"as_ptr",E,"Gets the underlying FFI pointer. Returns a borrowed pointer.",4,[[["self"]]]],[11,"steal_ptr",E,"Gets the underlying FFI pointer. Consumes `self` without…",4,[[]]],[11,"borrow_from_ptr",E,"Transmutes an FFI pointer to `&PyObject`. Undefined…",4,[[],[R[2]]]],[11,"borrow_from_owned_ptr_slice",E,"Transmutes a slice of owned FFI pointers to `&[PyObject]`.…",4,[[]]],[11,"get_refcnt",E,"Gets the reference count of this Python object.",4,[[["self"],[R[7]]],["usize"]]],[11,R[11],E,"Gets the Python type object for this object's type.",4,[[["self"],[R[7]]],[R[8]]]],[11,"unchecked_cast_into",E,R[14],4,[[],[T]]],[11,"cast_into",E,R[15],4,[[[R[7]]],[[R[41],[R[13]]],[R[13]]]]],[11,"unchecked_cast_as",E,R[14],4,[[["self"]],[T]]],[11,"cast_as",E,R[15],4,[[["self"],[R[7]]],[[R[13]],[T],[R[41],[R[13]]]]]],[11,R[128],E,"Extracts some type from the Python object. This is a…",4,[[[R[7]],["self"]],[R[4]]]],[11,"as_type_ptr",E,"Retrieves the underlying FFI pointer associated with this…",5,[[["self"]]]],[11,"from_type_ptr",E,"Retrieves the PyType instance for the given FFI pointer.…",5,[[[R[7]]],[R[8]]]],[11,"name",E,"Gets the name of the PyType.",5,[[[R[7]],["self"]],[["cow",["str"]],["str"]]]],[11,"is_subtype_of",E,"Return true if `self` is a subtype of `b`.",5,[[["self"],[R[7]],[R[8]]],["bool"]]],[11,"is_instance",E,"Return true if `obj` is an instance of `self`.",5,[[["self"],[R[7]],[R[2]]],["bool"]]],[11,"call",E,"Calls the type object, thus creating a new instance. This…",5,[[["a"],[R[3],[R[1]]],[R[7]],[R[1]],["self"]],[[R[4],[R[2]]],[R[2]]]]],[11,"new",E,"Create a new module object with the `__name__` attribute…",6,[[[R[7]],["str"]],[[R[4],[R[6]]],[R[6]]]]],[11,"import",E,R[16],6,[[[R[7]],["str"]],[[R[4],[R[6]]],[R[6]]]]],[11,"dict",E,"Return the dictionary object that implements module's…",6,[[["self"],[R[7]]],[R[1]]]],[11,"name",E,"Gets the module name.",6,[[[R[7]],["self"]],[[R[4],["str"]],["str"]]]],[11,"filename",E,"Gets the module filename.",6,[[[R[7]],["self"]],[[R[4],["str"]],["str"]]]],[11,"get",E,"Gets a member from the module. This is equivalent to the…",6,[[["self"],[R[7]],["str"]],[[R[4],[R[2]]],[R[2]]]]],[11,"call",E,"Calls a function in the module. This is equivalent to the…",6,[[["a"],[R[3],[R[1]]],[R[7]],["str"],[R[1]],["self"]],[[R[4],[R[2]]],[R[2]]]]],[11,"add",E,"Adds a member to the module.",6,[[[R[7]],["str"],["self"],["v"]],[R[4]]]],[11,"add_class",E,"Adds a new extension type to the module.",6,[[["self"],[R[7]]],[R[4]]]],[11,R[18],E,R[17],2,[[[R[7]]],[["cow",["str"]],[R[4],["cow"]]]]],[11,R[19],E,R[17],2,[[],[["cow",["str"]],["str"]]]],[11,"new",E,"Creates a new Python string object.",7,[[[R[7]],["str"]],[R[21]]]],[11,"data",E,R[26],7,[[["self"],[R[7]]],[R[27]]]],[11,R[18],E,R[20],7,[[["self"],[R[7]]],[[R[4],["cow"]],["cow",["str"]]]]],[11,R[19],E,R[20],7,[[["self"],[R[7]]],[["str"],["cow",["str"]]]]],[11,"new",E,"Creates a new Python byte string object. The byte string…",8,[[[R[7]]],[R[87]]]],[11,"data",E,"Gets the Python string data as byte slice.",8,[[["self"],[R[7]]]]],[11,R[23],E,R[22],8,[[["self"]],[R[21]]]],[11,R[24],E,R[22],8,[[],[R[21]]]],[11,"new",E,"Creates a new Python unicode string object.",9,[[[R[7]],["str"]],[R[68]]]],[11,R[23],E,R[25],9,[[["self"]],[R[21]]]],[11,R[24],E,R[25],9,[[],[R[21]]]],[11,"data",E,R[26],9,[[["self"],[R[7]]],[R[27]]]],[11,R[18],E,R[28],9,[[["self"],[R[7]]],[[R[4],["cow"]],["cow",["str"]]]]],[11,R[19],E,R[28],9,[[["self"],[R[7]]],[["str"],["cow",["str"]]]]],[11,"new",E,"Creates a new empty dictionary.",10,[[[R[7]]],[R[1]]]],[11,"copy",E,"Return a new dictionary that contains the same key-value…",10,[[["self"],[R[7]]],[[R[1]],[R[4],[R[1]]]]]],[11,"clear",E,"Empty an existing dictionary of all key-value pairs.",10,[[["self"],[R[7]]]]],[11,"len",E,"Return the number of items in the dictionary. This is…",10,[[["self"],[R[7]]],["usize"]]],[11,R[29],E,"Determine if the dictionary contains the specified key.…",10,[[["self"],[R[7]],["k"]],[[R[4],["bool"]],["bool"]]]],[11,R[32],E,"Gets an item from the dictionary. Returns None if the item…",10,[[["self"],[R[7]],["k"]],[[R[3],[R[2]]],[R[2]]]]],[11,R[34],E,R[70],10,[[[R[7]],["self"],["k"],["v"]],[R[4]]]],[11,R[38],E,R[71],10,[[["self"],[R[7]],["k"]],[R[4]]]],[11,"items_list",E,E,10,[[["self"],[R[7]]],[R[88]]]],[11,"items",E,"Returns the list of (key,value) pairs in this dictionary.",10,[[["self"],[R[7]]],["vec"]]],[11,"new",E,"Creates a new set from any iterable",11,[[["i"],[R[7]]],[[R[4],["pyset"]],["pyset"]]]],[11,"empty",E,"Creates an empty set",11,[[[R[7]]],[[R[4],["pyset"]],["pyset"]]]],[11,"clear",E,"Empty an existing set of all values.",11,[[["self"],[R[7]]],[R[4]]]],[11,"len",E,"Return the number of items in the set This is equivalent…",11,[[["self"],[R[7]]],["usize"]]],[11,R[29],E,"Determine if the set contains the specified value. This is…",11,[[["self"],[R[7]],["v"]],[[R[4],["bool"]],["bool"]]]],[11,"add",E,"Add a value. This is equivalent to the Python expression…",11,[[["self"],[R[7]],["v"]],[R[4]]]],[11,"discard",E,"Discard a value This is equivalent to the Python…",11,[[["self"],[R[7]],["v"]],[R[4]]]],[11,"pop",E,"Pop a value This is equivalent to the Python expression…",11,[[["self"],[R[7]]],[[R[4],[R[2]]],[R[2]]]]],[11,"from_object",E,"Constructs a PyIterator from a Python iterator object.",12,[[[R[2]],[R[7]]],[[R[41],[R[30],R[13]]],[R[13]],[R[30]]]]],[11,R[59],E,R[31],12,[[["self"]],[R[2]]]],[11,R[60],E,R[31],12,[[],[R[2]]]],[11,"get",E,"Depending on `val`, returns `py.True()` or `py.False()`.",13,[[[R[7]],["bool"]],[R[5]]]],[11,"is_true",E,"Gets whether this boolean is `true`.",13,[[["self"]],["bool"]]],[11,"new",E,"Construct a new tuple with the given elements.",14,[[[R[7]]],[R[39]]]],[11,"empty",E,"Retrieves the empty tuple.",14,[[[R[7]]],[R[39]]]],[11,"len",E,"Gets the length of the tuple.",14,[[["self"],[R[7]]],["usize"]]],[11,R[32],E,R[33],14,[[["self"],[R[7]],["usize"]],[R[2]]]],[11,R[52],E,E,14,[[[R[7]],["self"]]]],[11,"iter",E,E,14,[[["self"],[R[7]]],[[R[2]],["iter",[R[2]]]]]],[11,"new",E,"Construct a new list with the given elements.",15,[[[R[7]]],[R[88]]]],[11,"len",E,"Gets the length of the list.",15,[[["self"],[R[7]]],["usize"]]],[11,R[32],E,R[33],15,[[["self"],[R[7]],["usize"]],[R[2]]]],[11,R[34],E,"Sets the item at the specified index.",15,[[[R[7]],["usize"],[R[2]],["self"]]]],[11,"insert_item",E,"Inserts an item at the specified index.",15,[[[R[7]],["usize"],[R[2]],["self"]]]],[11,"iter",E,E,15,[[[R[7]],["self"]],["pylistiterator"]]],[11,"new",E,"Creates a new Python 2.7 `int` object.",16,[[[R[7]],["c_long"]],["pyint"]]],[11,"value",E,"Gets the value of this integer.",16,[[["self"],[R[7]]],["c_long"]]],[11,"new",E,"Creates a new Python `float` object.",17,[[[R[7]],[R[35]]],[R[89]]]],[11,"value",E,"Gets the value of this float.",17,[[["self"],[R[7]]],[R[35]]]],[11,"len",E,"Returns the number of objects in sequence. This is…",18,[[["self"],[R[7]]],[["isize"],[R[4],["isize"]]]]],[11,"concat",E,"Return the concatenation of o1 and o2. Equivalent to…",18,[[[R[36]],["self"],[R[7]]],[[R[4],[R[2]]],[R[2]]]]],[11,"repeat",E,R[37],18,[[["isize"],["self"],[R[7]]],[[R[4],[R[2]]],[R[2]]]]],[11,"in_place_concat",E,"Return the concatenation of o1 and o2 on success.…",18,[[[R[36]],["self"],[R[7]]],[[R[4],[R[2]]],[R[2]]]]],[11,"in_place_repeat",E,R[37],18,[[["isize"],["self"],[R[7]]],[[R[4],[R[2]]],[R[2]]]]],[11,R[32],E,"Return the ith element of the Sequence. Equivalent to…",18,[[["isize"],["self"],[R[7]]],[[R[4],[R[2]]],[R[2]]]]],[11,"get_slice",E,"Return the slice of sequence object o between begin and…",18,[[[R[7]],["isize"],["self"]],[[R[4],[R[2]]],[R[2]]]]],[11,R[34],E,"Assign object v to the ith element of o. Equivalent to…",18,[[[R[7]],["isize"],["self"],[R[2]]],[R[4]]]],[11,R[38],E,"Delete the ith element of object o. Python statement `del…",18,[[["isize"],["self"],[R[7]]],[R[4]]]],[11,"set_slice",E,"Assign the sequence object v to the slice in sequence…",18,[[[R[7]],["isize"],["self"],[R[2]]],[R[4]]]],[11,"del_slice",E,"Delete the slice in sequence object o from i1 to i2.…",18,[[[R[7]],["isize"],["self"]],[R[4]]]],[11,"count",E,"Return the number of occurrences of value in o, that is,…",18,[[["self"],[R[7]],["v"]],[["usize"],[R[4],["usize"]]]]],[11,R[29],E,"Determine if o contains value. this is equivalent to the…",18,[[["self"],[R[7]],["v"]],[[R[4],["bool"]],["bool"]]]],[11,"index",E,"Return the first index i for which o[i] == value. This is…",18,[[["self"],[R[7]],["v"]],[["usize"],[R[4],["usize"]]]]],[11,"list",E,"Return a fresh list based on the Sequence.",18,[[["self"],[R[7]]],[[R[88]],[R[4],[R[88]]]]]],[11,"tuple",E,"Return a fresh tuple based on the Sequence.",18,[[["self"],[R[7]]],[[R[4],[R[39]]],[R[39]]]]],[11,"iter",E,E,18,[[["self"],[R[7]]],[[R[4],[R[30]]],[R[30]]]]],[11,"import_data",E,"Retrieve the contents of a capsule pointing to some data…",19,[[[R[7]],["cstr"]],[[R[4]],[T]]]],[11,"import",E,"Retrieves the contents of a capsule as a void pointer by…",19,[[[R[7]],["cstr"]],[R[4]]]],[11,"new_data",E,"Convenience method to create a capsule for some data",19,[[["n"],[R[7]],[T]],[[R[40]],[R[41],[R[40]]]]]],[11,"new",E,"Creates a new capsule from a raw void pointer",19,[[[R[7]],["n"]],[[R[40]],[R[41],[R[40]]]]]],[11,"data_ref",E,R[42],19,[[["self"],["n"]],[[R[40]],[T],[R[41],[R[40]]]]]],[11,"data_ref_cstr",E,R[42],19,[[["self"],["cstr"]],[T]]],[11,"new",R[43],E,20,[[[R[7]],["cstr"],["usize"],["range",["usize"]]],[[R[44]],[R[4],[R[44]]]]]],[11,"new_utf8",E,E,20,[[["utf8error"],[R[7]]],[[R[44]],[R[4],[R[44]]]]]],[11,"is_subclass_of",R[45],"Return true if self is a subclass of base.",21,[[["self"],[R[7]],[R[127]]],["bool"]]],[11,"create_instance",E,"Create a new instance of the class. The parameters args…",21,[[[R[3],[R[1]]],[R[7]],[R[1]],["self"],[T]],[[R[4],[R[46]]],[R[46]]]]],[11,"create_instance_raw",E,"Create a new instance of a specific class without calling…",21,[[[R[1]],["self"],[R[7]]],[[R[4],[R[46]]],[R[46]]]]],[11,"acquire",R[0],R[47],22,[[],[R[48]]]],[11,R[7],E,"Retrieves the marker type that proves that the GIL was…",22,[[["self"]],[R[7]]]],[11,"new",E,"Creates a new instance of `GILProtected`.",23,[[[T]],["gilprotected"]]],[11,"get",E,"Returns a shared reference to the data stored in the…",23,[[[R[7]],["self"]],[T]]],[11,"into_inner",E,"Consumes the `GILProtected`, returning the wrapped value.",23,[[],[T]]],[0,"argparse",E,"This module contains logic for parsing a python argument…",N,N],[3,R[157],R[81],"Description of a python parameter; used for `parse_args()`.",N,N],[12,"name",E,"The name of the parameter.",24,N],[12,"is_optional",E,"Whether the parameter is optional.",24,N],[5,"parse_args",E,"Parse argument list",N,[[[R[3],[R[1]]],["str"],[R[7]],[R[39]],[R[3],["str"]],[R[1]]],[R[4]]]],[11,"name",E,"Name, with leading `r#` stripped.",24,[[["self"]],["str"]]],[0,"buffer",R[0],E,N,N],[3,"PyBuffer",R[49],"Allows access to the underlying buffer used by a python…",N,N],[3,R[159],E,"Like `std::mem::cell`, but only provides read-only access…",N,N],[4,R[158],E,E,N,N],[13,"SignedInteger",E,E,25,N],[12,"bytes",R[50],E,25,N],[13,"UnsignedInteger",R[49],E,25,N],[12,"bytes",R[50],E,25,N],[13,"Bool",R[49],E,25,N],[13,"Float",E,E,25,N],[12,"bytes",R[50],E,25,N],[13,"Unknown",R[49],E,25,N],[8,"Element",E,"Trait implemented for possible element types of `PyBuffer`.",N,N],[10,"is_compatible_format",E,"Gets whether the element specified in the format string is…",26,[[["cstr"]],["bool"]]],[11,"from_format",E,E,25,[[["cstr"]],[R[129]]]],[11,"get",E,"Get the underlying buffer from the specified python object.",27,[[[R[2]],[R[7]]],[[R[51]],[R[4],[R[51]]]]]],[11,"buf_ptr",E,"Gets the pointer to the start of the buffer memory.",27,[[["self"]]]],[11,"get_ptr",E,"Gets a pointer to the specified item.",27,[[["self"]]]],[11,"readonly",E,"Gets whether the underlying buffer is read-only.",27,[[["self"]],["bool"]]],[11,"item_size",E,"Gets the size of a single element, in bytes. Important…",27,[[["self"]],["usize"]]],[11,"item_count",E,"Gets the total number of items.",27,[[["self"]],["usize"]]],[11,"len_bytes",E,"`item_size() * item_count()`. For contiguous arrays, this…",27,[[["self"]],["usize"]]],[11,"dimensions",E,"Gets the number of dimensions.",27,[[["self"]],["usize"]]],[11,"shape",E,"Returns an array of length `dimensions`. `shape()[i]` is…",27,[[["self"]]]],[11,"strides",E,"Returns an array that holds, for each dimension, the…",27,[[["self"]]]],[11,"suboffsets",E,"An array of length ndim. If suboffsets[n] >= 0, the values…",27,[[["self"]],[R[3]]]],[11,"format",E,"A NUL terminated string in struct module style syntax…",27,[[["self"]],["cstr"]]],[11,"is_c_contiguous",E,"Gets whether the buffer is contiguous in C-style order…",27,[[["self"]],["bool"]]],[11,"is_fortran_contiguous",E,"Gets whether the buffer is contiguous in Fortran-style…",27,[[["self"]],["bool"]]],[11,R[52],E,R[53],27,[[[R[7]],["self"]],[R[3]]]],[11,"as_mut_slice",E,R[53],27,[[[R[7]],["self"]],[R[3]]]],[11,"as_fortran_slice",E,R[53],27,[[[R[7]],["self"]],[R[3]]]],[11,"as_fortran_mut_slice",E,R[53],27,[[[R[7]],["self"]],[R[3]]]],[11,"copy_to_slice",E,R[54],27,[[["self"],[R[7]]],[R[4]]]],[11,"copy_to_fortran_slice",E,R[54],27,[[["self"],[R[7]]],[R[4]]]],[11,"to_vec",E,R[55],27,[[["self"],[R[7]]],[["vec"],[R[4],["vec"]]]]],[11,"to_fortran_vec",E,R[55],27,[[["self"],[R[7]]],[["vec"],[R[4],["vec"]]]]],[11,"copy_from_slice",E,R[56],27,[[["self"],[R[7]]],[R[4]]]],[11,"copy_from_fortran_slice",E,R[56],27,[[["self"],[R[7]]],[R[4]]]],[11,"get",E,E,28,[[["self"]],[T]]],[11,"as_ptr",E,E,28,[[["self"]]]],[0,R[72],R[0],E,N,N],[4,R[160],R[58],E,N,N],[13,"Lt",E,E,29,N],[13,"Le",E,E,29,N],[13,"Eq",E,E,29,N],[13,"Ne",E,E,29,N],[13,"Gt",E,E,29,N],[13,"Ge",E,E,29,N],[0,"gc",E,E,N,N],[3,R[198],R[82],E,N,N],[3,R[161],E,E,N,N],[11,"call",E,E,30,[[[T],["self"]],[[R[41],[R[57]]],[R[57]]]]],[8,R[162],R[58],"Trait implemented by the types produced by the…",N,N],[10,"initialize",E,"Initializes the class.",31,[[[R[3],["str"]],[R[7]],["str"]],[[R[4],[R[8]]],[R[8]]]]],[10,"add_to_module",E,"Initializes the class and adds it to the module.",31,[[[R[6]],[R[7]]],[R[4]]]],[8,R[163],E,"A PythonObject that is usable as a base type with the…",N,N],[10,"size",E,"Gets the size of the object, in bytes.",32,[[],["usize"]]],[16,"InitType",E,E,32,N],[10,"alloc",E,"Allocates a new object (usually by calling ty->tp_alloc),…",32,[[[R[7]],[R[8]]],[[R[4],[R[2]]],[R[2]]]]],[10,"dealloc",E,"Calls the rust destructor for the object and frees the…",32,[[[R[7]]]]],[6,"PyResult",R[0],"Represents the result of a Python call.",N,N],[6,"Py_hash_t",E,E,N,N],[8,R[164],E,"Trait implemented by all Python object types.",N,N],[10,R[59],E,R[61],33,[[["self"]],[R[2]]]],[10,R[60],E,R[61],33,[[],[R[2]]]],[10,R[83],E,R[62],33,[[[R[2]]],["self"]]],[10,R[84],E,R[62],33,[[[R[2]]],["self"]]],[8,R[165],E,"Trait implemented by Python object types that allow a…",N,N],[10,R[85],E,R[63],34,[[[R[2]],[R[7]]],[[R[13]],[R[41],[R[13]]]]]],[10,R[86],E,R[63],34,[[[R[2]],[R[7]]],[[R[13]],[R[41],[R[13]]],["self"]]]],[8,R[166],E,"Trait implemented by Python object types that have a…",N,N],[10,R[119],E,"Retrieves the type object for this Python object type.",35,[[[R[7]]],[R[8]]]],[8,"PyClone",E,E,N,N],[10,R[120],E,E,36,[[["self"],[R[7]]],["self"]]],[8,"PyDrop",E,E,N,N],[10,R[121],E,E,37,[[[R[7]]]]],[8,R[167],E,"FromPyObject is implemented by various types that can be…",N,N],[10,R[128],E,"Extracts `Self` from the source `PyObject`.",38,[[[R[2]],[R[7]]],[R[4]]]],[8,R[168],E,E,N,N],[10,"with_extracted",E,E,39,[[[R[2]],[R[7]],["f"]],[R[4]]]],[8,R[169],E,"Conversion trait that allows various objects to be…",N,N],[16,"ObjectType",E,E,40,N],[10,R[122],E,R[64],40,[[["self"],[R[7]]]]],[11,R[123],E,R[64],40,[[[R[7]]]]],[11,R[124],E,R[131],40,[[["self"],[R[7]],["f"]],["r"]]],[8,R[170],E,"Trait that contains methods",N,N],[11,"hasattr",E,R[132],41,[[["self"],[R[7]],["n"]],[[R[4],["bool"]],["bool"]]]],[11,"getattr",E,R[133],41,[[["self"],[R[7]],["n"]],[[R[4],[R[2]]],[R[2]]]]],[11,"setattr",E,R[134],41,[[[R[7]],["n"],["self"],["v"]],[R[4]]]],[11,"delattr",E,R[135],41,[[["self"],[R[7]],["n"]],[R[4]]]],[11,"compare",E,R[66],41,[[["self"],[R[7]],["o"]],[[R[4],[R[65]]],[R[65]]]]],[11,R[136],E,R[66],41,[[["o"],[R[7]],[R[137]],["self"]],[[R[4],[R[2]]],[R[2]]]]],[11,"repr",E,R[67],41,[[["self"],[R[7]]],[[R[21]],[R[4],[R[21]]]]]],[11,"str",E,R[67],41,[[["self"],[R[7]]],[[R[21]],[R[4],[R[21]]]]]],[11,"unistr",E,R[138],41,[[["self"],[R[7]]],[[R[4],[R[68]]],[R[68]]]]],[11,R[139],E,R[140],41,[[["self"],[R[7]]],["bool"]]],[11,"call",E,R[141],41,[[["a"],[R[3],[R[1]]],[R[7]],[R[1]],["self"]],[[R[4],[R[2]]],[R[2]]]]],[11,R[142],E,R[143],41,[[["a"],[R[3],[R[1]]],[R[7]],["str"],[R[1]],["self"]],[[R[4],[R[2]]],[R[2]]]]],[11,"hash",E,R[144],41,[[["self"],[R[7]]],[[R[4],[R[69]]],[R[69]]]]],[11,"is_true",E,R[145],41,[[["self"],[R[7]]],[[R[4],["bool"]],["bool"]]]],[11,"len",E,R[146],41,[[["self"],[R[7]]],[["usize"],[R[4],["usize"]]]]],[11,R[32],E,R[147],41,[[["self"],[R[7]],["k"]],[[R[4],[R[2]]],[R[2]]]]],[11,R[34],E,R[70],41,[[[R[7]],["self"],["k"],["v"]],[R[4]]]],[11,R[38],E,R[71],41,[[["self"],[R[7]],["k"]],[R[4]]]],[11,"iter",E,R[148],41,[[["self"],[R[7]]],[[R[30]],[R[4],[R[30]]]]]],[14,"py_exception",E,"Defines a new exception type.",N,N],[14,"pyobject_newtype",E,E,N,N],[14,"py_capsule",E,"Macro to retrieve a Python capsule pointing to an array of…",N,N],[14,"py_capsule_fn",E,"Macro to retrieve a function pointer capsule.",N,N],[14,"py_argparse",E,"This macro is used to parse a parameter list into a set of…",N,N],[14,"py_fn",E,"Creates a Python callable object that invokes a Rust…",N,N],[14,R[72],E,"Defines new python extension class. A `py_class!` macro…",N,N],[14,"py_module_initializer",E,"Expands to an `extern \"C\"` function that allows Python to…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[73],E,E,0,[[[U]],[R[41]]]],[11,R[74],E,E,0,[[],[R[41]]]],[11,R[75],E,E,0,[[["self"]],[T]]],[11,R[77],E,E,0,[[["self"]],[T]]],[11,R[76],E,E,0,[[["self"]],[R[78]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[18],E,E,4,[[["self"]],["string"]]],[11,"into",E,E,4,[[],[U]]],[11,R[73],E,E,4,[[[U]],[R[41]]]],[11,R[74],E,E,4,[[],[R[41]]]],[11,R[75],E,E,4,[[["self"]],[T]]],[11,R[77],E,E,4,[[["self"]],[T]]],[11,R[76],E,E,4,[[["self"]],[R[78]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[73],E,E,5,[[[U]],[R[41]]]],[11,R[74],E,E,5,[[],[R[41]]]],[11,R[75],E,E,5,[[["self"]],[T]]],[11,R[77],E,E,5,[[["self"]],[T]]],[11,R[76],E,E,5,[[["self"]],[R[78]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[73],E,E,6,[[[U]],[R[41]]]],[11,R[74],E,E,6,[[],[R[41]]]],[11,R[75],E,E,6,[[["self"]],[T]]],[11,R[77],E,E,6,[[["self"]],[T]]],[11,R[76],E,E,6,[[["self"]],[R[78]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[73],E,E,8,[[[U]],[R[41]]]],[11,R[74],E,E,8,[[],[R[41]]]],[11,R[75],E,E,8,[[["self"]],[T]]],[11,R[77],E,E,8,[[["self"]],[T]]],[11,R[76],E,E,8,[[["self"]],[R[78]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[73],E,E,7,[[[U]],[R[41]]]],[11,R[74],E,E,7,[[],[R[41]]]],[11,R[75],E,E,7,[[["self"]],[T]]],[11,R[77],E,E,7,[[["self"]],[T]]],[11,R[76],E,E,7,[[["self"]],[R[78]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[73],E,E,9,[[[U]],[R[41]]]],[11,R[74],E,E,9,[[],[R[41]]]],[11,R[75],E,E,9,[[["self"]],[T]]],[11,R[77],E,E,9,[[["self"]],[T]]],[11,R[76],E,E,9,[[["self"]],[R[78]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into_iter",E,E,12,[[],["i"]]],[11,"into",E,E,12,[[],[U]]],[11,R[73],E,E,12,[[[U]],[R[41]]]],[11,R[74],E,E,12,[[],[R[41]]]],[11,R[75],E,E,12,[[["self"]],[T]]],[11,R[77],E,E,12,[[["self"]],[T]]],[11,R[76],E,E,12,[[["self"]],[R[78]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[73],E,E,13,[[[U]],[R[41]]]],[11,R[74],E,E,13,[[],[R[41]]]],[11,R[75],E,E,13,[[["self"]],[T]]],[11,R[77],E,E,13,[[["self"]],[T]]],[11,R[76],E,E,13,[[["self"]],[R[78]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[73],E,E,14,[[[U]],[R[41]]]],[11,R[74],E,E,14,[[],[R[41]]]],[11,R[75],E,E,14,[[["self"]],[T]]],[11,R[77],E,E,14,[[["self"]],[T]]],[11,R[76],E,E,14,[[["self"]],[R[78]]]],[11,R[79],E,E,42,[[["self"]],[T]]],[11,R[80],E,E,42,[[[T],["self"]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[73],E,E,42,[[[U]],[R[41]]]],[11,R[74],E,E,42,[[],[R[41]]]],[11,R[75],E,E,42,[[["self"]],[T]]],[11,R[77],E,E,42,[[["self"]],[T]]],[11,R[76],E,E,42,[[["self"]],[R[78]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[73],E,E,10,[[[U]],[R[41]]]],[11,R[74],E,E,10,[[],[R[41]]]],[11,R[75],E,E,10,[[["self"]],[T]]],[11,R[77],E,E,10,[[["self"]],[T]]],[11,R[76],E,E,10,[[["self"]],[R[78]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[73],E,E,11,[[[U]],[R[41]]]],[11,R[74],E,E,11,[[],[R[41]]]],[11,R[75],E,E,11,[[["self"]],[T]]],[11,R[77],E,E,11,[[["self"]],[T]]],[11,R[76],E,E,11,[[["self"]],[R[78]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[73],E,E,15,[[[U]],[R[41]]]],[11,R[74],E,E,15,[[],[R[41]]]],[11,R[75],E,E,15,[[["self"]],[T]]],[11,R[77],E,E,15,[[["self"]],[T]]],[11,R[76],E,E,15,[[["self"]],[R[78]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[73],E,E,16,[[[U]],[R[41]]]],[11,R[74],E,E,16,[[],[R[41]]]],[11,R[75],E,E,16,[[["self"]],[T]]],[11,R[77],E,E,16,[[["self"]],[T]]],[11,R[76],E,E,16,[[["self"]],[R[78]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[73],E,E,43,[[[U]],[R[41]]]],[11,R[74],E,E,43,[[],[R[41]]]],[11,R[75],E,E,43,[[["self"]],[T]]],[11,R[77],E,E,43,[[["self"]],[T]]],[11,R[76],E,E,43,[[["self"]],[R[78]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[73],E,E,17,[[[U]],[R[41]]]],[11,R[74],E,E,17,[[],[R[41]]]],[11,R[75],E,E,17,[[["self"]],[T]]],[11,R[77],E,E,17,[[["self"]],[T]]],[11,R[76],E,E,17,[[["self"]],[R[78]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[73],E,E,18,[[[U]],[R[41]]]],[11,R[74],E,E,18,[[],[R[41]]]],[11,R[75],E,E,18,[[["self"]],[T]]],[11,R[77],E,E,18,[[["self"]],[T]]],[11,R[76],E,E,18,[[["self"]],[R[78]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[73],E,E,19,[[[U]],[R[41]]]],[11,R[74],E,E,19,[[],[R[41]]]],[11,R[75],E,E,19,[[["self"]],[T]]],[11,R[77],E,E,19,[[["self"]],[T]]],[11,R[76],E,E,19,[[["self"]],[R[78]]]],[11,R[79],E,E,3,[[["self"]],[T]]],[11,R[80],E,E,3,[[[T],["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[73],E,E,3,[[[U]],[R[41]]]],[11,R[74],E,E,3,[[],[R[41]]]],[11,R[75],E,E,3,[[["self"]],[T]]],[11,R[77],E,E,3,[[["self"]],[T]]],[11,R[76],E,E,3,[[["self"]],[R[78]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[73],E,E,1,[[[U]],[R[41]]]],[11,R[74],E,E,1,[[],[R[41]]]],[11,R[75],E,E,1,[[["self"]],[T]]],[11,R[77],E,E,1,[[["self"]],[T]]],[11,R[76],E,E,1,[[["self"]],[R[78]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[73],E,E,22,[[[U]],[R[41]]]],[11,R[74],E,E,22,[[],[R[41]]]],[11,R[75],E,E,22,[[["self"]],[T]]],[11,R[77],E,E,22,[[["self"]],[T]]],[11,R[76],E,E,22,[[["self"]],[R[78]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[73],E,E,23,[[[U]],[R[41]]]],[11,R[74],E,E,23,[[],[R[41]]]],[11,R[75],E,E,23,[[["self"]],[T]]],[11,R[77],E,E,23,[[["self"]],[T]]],[11,R[76],E,E,23,[[["self"]],[R[78]]]],[11,R[79],E,E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[[T],["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[73],E,E,2,[[[U]],[R[41]]]],[11,R[74],E,E,2,[[],[R[41]]]],[11,R[75],E,E,2,[[["self"]],[T]]],[11,R[77],E,E,2,[[["self"]],[T]]],[11,R[76],E,E,2,[[["self"]],[R[78]]]],[11,"from",R[43],E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[73],E,E,44,[[[U]],[R[41]]]],[11,R[74],E,E,44,[[],[R[41]]]],[11,R[75],E,E,44,[[["self"]],[T]]],[11,R[77],E,E,44,[[["self"]],[T]]],[11,R[76],E,E,44,[[["self"]],[R[78]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[73],E,E,45,[[[U]],[R[41]]]],[11,R[74],E,E,45,[[],[R[41]]]],[11,R[75],E,E,45,[[["self"]],[T]]],[11,R[77],E,E,45,[[["self"]],[T]]],[11,R[76],E,E,45,[[["self"]],[R[78]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[73],E,E,46,[[[U]],[R[41]]]],[11,R[74],E,E,46,[[],[R[41]]]],[11,R[75],E,E,46,[[["self"]],[T]]],[11,R[77],E,E,46,[[["self"]],[T]]],[11,R[76],E,E,46,[[["self"]],[R[78]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[73],E,E,47,[[[U]],[R[41]]]],[11,R[74],E,E,47,[[],[R[41]]]],[11,R[75],E,E,47,[[["self"]],[T]]],[11,R[77],E,E,47,[[["self"]],[T]]],[11,R[76],E,E,47,[[["self"]],[R[78]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[73],E,E,48,[[[U]],[R[41]]]],[11,R[74],E,E,48,[[],[R[41]]]],[11,R[75],E,E,48,[[["self"]],[T]]],[11,R[77],E,E,48,[[["self"]],[T]]],[11,R[76],E,E,48,[[["self"]],[R[78]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[73],E,E,49,[[[U]],[R[41]]]],[11,R[74],E,E,49,[[],[R[41]]]],[11,R[75],E,E,49,[[["self"]],[T]]],[11,R[77],E,E,49,[[["self"]],[T]]],[11,R[76],E,E,49,[[["self"]],[R[78]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[73],E,E,50,[[[U]],[R[41]]]],[11,R[74],E,E,50,[[],[R[41]]]],[11,R[75],E,E,50,[[["self"]],[T]]],[11,R[77],E,E,50,[[["self"]],[T]]],[11,R[76],E,E,50,[[["self"]],[R[78]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[73],E,E,51,[[[U]],[R[41]]]],[11,R[74],E,E,51,[[],[R[41]]]],[11,R[75],E,E,51,[[["self"]],[T]]],[11,R[77],E,E,51,[[["self"]],[T]]],[11,R[76],E,E,51,[[["self"]],[R[78]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[73],E,E,52,[[[U]],[R[41]]]],[11,R[74],E,E,52,[[],[R[41]]]],[11,R[75],E,E,52,[[["self"]],[T]]],[11,R[77],E,E,52,[[["self"]],[T]]],[11,R[76],E,E,52,[[["self"]],[R[78]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[73],E,E,53,[[[U]],[R[41]]]],[11,R[74],E,E,53,[[],[R[41]]]],[11,R[75],E,E,53,[[["self"]],[T]]],[11,R[77],E,E,53,[[["self"]],[T]]],[11,R[76],E,E,53,[[["self"]],[R[78]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[73],E,E,54,[[[U]],[R[41]]]],[11,R[74],E,E,54,[[],[R[41]]]],[11,R[75],E,E,54,[[["self"]],[T]]],[11,R[77],E,E,54,[[["self"]],[T]]],[11,R[76],E,E,54,[[["self"]],[R[78]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[73],E,E,55,[[[U]],[R[41]]]],[11,R[74],E,E,55,[[],[R[41]]]],[11,R[75],E,E,55,[[["self"]],[T]]],[11,R[77],E,E,55,[[["self"]],[T]]],[11,R[76],E,E,55,[[["self"]],[R[78]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[73],E,E,56,[[[U]],[R[41]]]],[11,R[74],E,E,56,[[],[R[41]]]],[11,R[75],E,E,56,[[["self"]],[T]]],[11,R[77],E,E,56,[[["self"]],[T]]],[11,R[76],E,E,56,[[["self"]],[R[78]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[73],E,E,57,[[[U]],[R[41]]]],[11,R[74],E,E,57,[[],[R[41]]]],[11,R[75],E,E,57,[[["self"]],[T]]],[11,R[77],E,E,57,[[["self"]],[T]]],[11,R[76],E,E,57,[[["self"]],[R[78]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[73],E,E,58,[[[U]],[R[41]]]],[11,R[74],E,E,58,[[],[R[41]]]],[11,R[75],E,E,58,[[["self"]],[T]]],[11,R[77],E,E,58,[[["self"]],[T]]],[11,R[76],E,E,58,[[["self"]],[R[78]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[73],E,E,59,[[[U]],[R[41]]]],[11,R[74],E,E,59,[[],[R[41]]]],[11,R[75],E,E,59,[[["self"]],[T]]],[11,R[77],E,E,59,[[["self"]],[T]]],[11,R[76],E,E,59,[[["self"]],[R[78]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[73],E,E,60,[[[U]],[R[41]]]],[11,R[74],E,E,60,[[],[R[41]]]],[11,R[75],E,E,60,[[["self"]],[T]]],[11,R[77],E,E,60,[[["self"]],[T]]],[11,R[76],E,E,60,[[["self"]],[R[78]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[73],E,E,61,[[[U]],[R[41]]]],[11,R[74],E,E,61,[[],[R[41]]]],[11,R[75],E,E,61,[[["self"]],[T]]],[11,R[77],E,E,61,[[["self"]],[T]]],[11,R[76],E,E,61,[[["self"]],[R[78]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[73],E,E,62,[[[U]],[R[41]]]],[11,R[74],E,E,62,[[],[R[41]]]],[11,R[75],E,E,62,[[["self"]],[T]]],[11,R[77],E,E,62,[[["self"]],[T]]],[11,R[76],E,E,62,[[["self"]],[R[78]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[73],E,E,63,[[[U]],[R[41]]]],[11,R[74],E,E,63,[[],[R[41]]]],[11,R[75],E,E,63,[[["self"]],[T]]],[11,R[77],E,E,63,[[["self"]],[T]]],[11,R[76],E,E,63,[[["self"]],[R[78]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[73],E,E,64,[[[U]],[R[41]]]],[11,R[74],E,E,64,[[],[R[41]]]],[11,R[75],E,E,64,[[["self"]],[T]]],[11,R[77],E,E,64,[[["self"]],[T]]],[11,R[76],E,E,64,[[["self"]],[R[78]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[73],E,E,65,[[[U]],[R[41]]]],[11,R[74],E,E,65,[[],[R[41]]]],[11,R[75],E,E,65,[[["self"]],[T]]],[11,R[77],E,E,65,[[["self"]],[T]]],[11,R[76],E,E,65,[[["self"]],[R[78]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[73],E,E,66,[[[U]],[R[41]]]],[11,R[74],E,E,66,[[],[R[41]]]],[11,R[75],E,E,66,[[["self"]],[T]]],[11,R[77],E,E,66,[[["self"]],[T]]],[11,R[76],E,E,66,[[["self"]],[R[78]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[73],E,E,67,[[[U]],[R[41]]]],[11,R[74],E,E,67,[[],[R[41]]]],[11,R[75],E,E,67,[[["self"]],[T]]],[11,R[77],E,E,67,[[["self"]],[T]]],[11,R[76],E,E,67,[[["self"]],[R[78]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[73],E,E,68,[[[U]],[R[41]]]],[11,R[74],E,E,68,[[],[R[41]]]],[11,R[75],E,E,68,[[["self"]],[T]]],[11,R[77],E,E,68,[[["self"]],[T]]],[11,R[76],E,E,68,[[["self"]],[R[78]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[73],E,E,69,[[[U]],[R[41]]]],[11,R[74],E,E,69,[[],[R[41]]]],[11,R[75],E,E,69,[[["self"]],[T]]],[11,R[77],E,E,69,[[["self"]],[T]]],[11,R[76],E,E,69,[[["self"]],[R[78]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[73],E,E,70,[[[U]],[R[41]]]],[11,R[74],E,E,70,[[],[R[41]]]],[11,R[75],E,E,70,[[["self"]],[T]]],[11,R[77],E,E,70,[[["self"]],[T]]],[11,R[76],E,E,70,[[["self"]],[R[78]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[73],E,E,71,[[[U]],[R[41]]]],[11,R[74],E,E,71,[[],[R[41]]]],[11,R[75],E,E,71,[[["self"]],[T]]],[11,R[77],E,E,71,[[["self"]],[T]]],[11,R[76],E,E,71,[[["self"]],[R[78]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[73],E,E,20,[[[U]],[R[41]]]],[11,R[74],E,E,20,[[],[R[41]]]],[11,R[75],E,E,20,[[["self"]],[T]]],[11,R[77],E,E,20,[[["self"]],[T]]],[11,R[76],E,E,20,[[["self"]],[R[78]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[73],E,E,72,[[[U]],[R[41]]]],[11,R[74],E,E,72,[[],[R[41]]]],[11,R[75],E,E,72,[[["self"]],[T]]],[11,R[77],E,E,72,[[["self"]],[T]]],[11,R[76],E,E,72,[[["self"]],[R[78]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[73],E,E,73,[[[U]],[R[41]]]],[11,R[74],E,E,73,[[],[R[41]]]],[11,R[75],E,E,73,[[["self"]],[T]]],[11,R[77],E,E,73,[[["self"]],[T]]],[11,R[76],E,E,73,[[["self"]],[R[78]]]],[11,"from",R[45],E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[73],E,E,21,[[[U]],[R[41]]]],[11,R[74],E,E,21,[[],[R[41]]]],[11,R[75],E,E,21,[[["self"]],[T]]],[11,R[77],E,E,21,[[["self"]],[T]]],[11,R[76],E,E,21,[[["self"]],[R[78]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[73],E,E,74,[[[U]],[R[41]]]],[11,R[74],E,E,74,[[],[R[41]]]],[11,R[75],E,E,74,[[["self"]],[T]]],[11,R[77],E,E,74,[[["self"]],[T]]],[11,R[76],E,E,74,[[["self"]],[R[78]]]],[11,"from",R[81],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[73],E,E,24,[[[U]],[R[41]]]],[11,R[74],E,E,24,[[],[R[41]]]],[11,R[75],E,E,24,[[["self"]],[T]]],[11,R[77],E,E,24,[[["self"]],[T]]],[11,R[76],E,E,24,[[["self"]],[R[78]]]],[11,"from",R[49],E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[73],E,E,27,[[[U]],[R[41]]]],[11,R[74],E,E,27,[[],[R[41]]]],[11,R[75],E,E,27,[[["self"]],[T]]],[11,R[77],E,E,27,[[["self"]],[T]]],[11,R[76],E,E,27,[[["self"]],[R[78]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[73],E,E,28,[[[U]],[R[41]]]],[11,R[74],E,E,28,[[],[R[41]]]],[11,R[75],E,E,28,[[["self"]],[T]]],[11,R[77],E,E,28,[[["self"]],[T]]],[11,R[76],E,E,28,[[["self"]],[R[78]]]],[11,R[79],E,E,25,[[["self"]],[T]]],[11,R[80],E,E,25,[[[T],["self"]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[73],E,E,25,[[[U]],[R[41]]]],[11,R[74],E,E,25,[[],[R[41]]]],[11,R[75],E,E,25,[[["self"]],[T]]],[11,R[77],E,E,25,[[["self"]],[T]]],[11,R[76],E,E,25,[[["self"]],[R[78]]]],[11,"from",R[58],E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[73],E,E,29,[[[U]],[R[41]]]],[11,R[74],E,E,29,[[],[R[41]]]],[11,R[75],E,E,29,[[["self"]],[T]]],[11,R[77],E,E,29,[[["self"]],[T]]],[11,R[76],E,E,29,[[["self"]],[R[78]]]],[11,"from",R[82],E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[73],E,E,75,[[[U]],[R[41]]]],[11,R[74],E,E,75,[[],[R[41]]]],[11,R[75],E,E,75,[[["self"]],[T]]],[11,R[77],E,E,75,[[["self"]],[T]]],[11,R[76],E,E,75,[[["self"]],[R[78]]]],[11,R[79],E,E,30,[[["self"]],[T]]],[11,R[80],E,E,30,[[[T],["self"]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[73],E,E,30,[[[U]],[R[41]]]],[11,R[74],E,E,30,[[],[R[41]]]],[11,R[75],E,E,30,[[["self"]],[T]]],[11,R[77],E,E,30,[[["self"]],[T]]],[11,R[76],E,E,30,[[["self"]],[R[78]]]],[11,R[59],R[0],E,4,[[["self"]],[R[2]]]],[11,R[60],E,E,4,[[],[R[2]]]],[11,R[83],E,E,4,[[[R[2]]],[R[2]]]],[11,R[84],E,E,4,[[[R[2]]],[R[2]]]],[11,R[59],E,E,5,[[["self"]],[R[2]]]],[11,R[60],E,E,5,[[],[R[2]]]],[11,R[83],E,R[62],5,[[[R[2]]],["self"]]],[11,R[84],E,R[62],5,[[[R[2]]],["self"]]],[11,R[59],E,E,6,[[["self"]],[R[2]]]],[11,R[60],E,E,6,[[],[R[2]]]],[11,R[83],E,R[62],6,[[[R[2]]],["self"]]],[11,R[84],E,R[62],6,[[[R[2]]],["self"]]],[11,R[59],E,E,7,[[["self"]],[R[2]]]],[11,R[60],E,E,7,[[],[R[2]]]],[11,R[83],E,R[62],7,[[[R[2]]],["self"]]],[11,R[84],E,R[62],7,[[[R[2]]],["self"]]],[11,R[59],E,E,8,[[["self"]],[R[2]]]],[11,R[60],E,E,8,[[],[R[2]]]],[11,R[83],E,R[62],8,[[[R[2]]],["self"]]],[11,R[84],E,R[62],8,[[[R[2]]],["self"]]],[11,R[59],E,E,9,[[["self"]],[R[2]]]],[11,R[60],E,E,9,[[],[R[2]]]],[11,R[83],E,R[62],9,[[[R[2]]],["self"]]],[11,R[84],E,R[62],9,[[[R[2]]],["self"]]],[11,R[59],E,E,10,[[["self"]],[R[2]]]],[11,R[60],E,E,10,[[],[R[2]]]],[11,R[83],E,R[62],10,[[[R[2]]],["self"]]],[11,R[84],E,R[62],10,[[[R[2]]],["self"]]],[11,R[59],E,E,11,[[["self"]],[R[2]]]],[11,R[60],E,E,11,[[],[R[2]]]],[11,R[83],E,R[62],11,[[[R[2]]],["self"]]],[11,R[84],E,R[62],11,[[[R[2]]],["self"]]],[11,R[59],E,E,13,[[["self"]],[R[2]]]],[11,R[60],E,E,13,[[],[R[2]]]],[11,R[83],E,R[62],13,[[[R[2]]],["self"]]],[11,R[84],E,R[62],13,[[[R[2]]],["self"]]],[11,R[59],E,E,14,[[["self"]],[R[2]]]],[11,R[60],E,E,14,[[],[R[2]]]],[11,R[83],E,R[62],14,[[[R[2]]],["self"]]],[11,R[84],E,R[62],14,[[[R[2]]],["self"]]],[11,R[59],E,E,15,[[["self"]],[R[2]]]],[11,R[60],E,E,15,[[],[R[2]]]],[11,R[83],E,R[62],15,[[[R[2]]],["self"]]],[11,R[84],E,R[62],15,[[[R[2]]],["self"]]],[11,R[59],E,E,16,[[["self"]],[R[2]]]],[11,R[60],E,E,16,[[],[R[2]]]],[11,R[83],E,R[62],16,[[[R[2]]],["self"]]],[11,R[84],E,R[62],16,[[[R[2]]],["self"]]],[11,R[59],E,E,43,[[["self"]],[R[2]]]],[11,R[60],E,E,43,[[],[R[2]]]],[11,R[83],E,R[62],43,[[[R[2]]],["self"]]],[11,R[84],E,R[62],43,[[[R[2]]],["self"]]],[11,R[59],E,E,17,[[["self"]],[R[2]]]],[11,R[60],E,E,17,[[],[R[2]]]],[11,R[83],E,R[62],17,[[[R[2]]],["self"]]],[11,R[84],E,R[62],17,[[[R[2]]],["self"]]],[11,R[59],E,E,18,[[["self"]],[R[2]]]],[11,R[60],E,E,18,[[],[R[2]]]],[11,R[83],E,R[62],18,[[[R[2]]],["self"]]],[11,R[84],E,R[62],18,[[[R[2]]],["self"]]],[11,R[59],E,E,19,[[["self"]],[R[2]]]],[11,R[60],E,E,19,[[],[R[2]]]],[11,R[83],E,R[62],19,[[[R[2]]],["self"]]],[11,R[84],E,R[62],19,[[[R[2]]],["self"]]],[11,R[59],R[43],E,44,[[["self"]],[R[2]]]],[11,R[60],E,E,44,[[],[R[2]]]],[11,R[83],E,R[62],44,[[[R[2]]],["self"]]],[11,R[84],E,R[62],44,[[[R[2]]],["self"]]],[11,R[59],E,E,45,[[["self"]],[R[2]]]],[11,R[60],E,E,45,[[],[R[2]]]],[11,R[83],E,R[62],45,[[[R[2]]],["self"]]],[11,R[84],E,R[62],45,[[[R[2]]],["self"]]],[11,R[59],E,E,46,[[["self"]],[R[2]]]],[11,R[60],E,E,46,[[],[R[2]]]],[11,R[83],E,R[62],46,[[[R[2]]],["self"]]],[11,R[84],E,R[62],46,[[[R[2]]],["self"]]],[11,R[59],E,E,47,[[["self"]],[R[2]]]],[11,R[60],E,E,47,[[],[R[2]]]],[11,R[83],E,R[62],47,[[[R[2]]],["self"]]],[11,R[84],E,R[62],47,[[[R[2]]],["self"]]],[11,R[59],E,E,48,[[["self"]],[R[2]]]],[11,R[60],E,E,48,[[],[R[2]]]],[11,R[83],E,R[62],48,[[[R[2]]],["self"]]],[11,R[84],E,R[62],48,[[[R[2]]],["self"]]],[11,R[59],E,E,49,[[["self"]],[R[2]]]],[11,R[60],E,E,49,[[],[R[2]]]],[11,R[83],E,R[62],49,[[[R[2]]],["self"]]],[11,R[84],E,R[62],49,[[[R[2]]],["self"]]],[11,R[59],E,E,50,[[["self"]],[R[2]]]],[11,R[60],E,E,50,[[],[R[2]]]],[11,R[83],E,R[62],50,[[[R[2]]],["self"]]],[11,R[84],E,R[62],50,[[[R[2]]],["self"]]],[11,R[59],E,E,51,[[["self"]],[R[2]]]],[11,R[60],E,E,51,[[],[R[2]]]],[11,R[83],E,R[62],51,[[[R[2]]],["self"]]],[11,R[84],E,R[62],51,[[[R[2]]],["self"]]],[11,R[59],E,E,52,[[["self"]],[R[2]]]],[11,R[60],E,E,52,[[],[R[2]]]],[11,R[83],E,R[62],52,[[[R[2]]],["self"]]],[11,R[84],E,R[62],52,[[[R[2]]],["self"]]],[11,R[59],E,E,53,[[["self"]],[R[2]]]],[11,R[60],E,E,53,[[],[R[2]]]],[11,R[83],E,R[62],53,[[[R[2]]],["self"]]],[11,R[84],E,R[62],53,[[[R[2]]],["self"]]],[11,R[59],E,E,54,[[["self"]],[R[2]]]],[11,R[60],E,E,54,[[],[R[2]]]],[11,R[83],E,R[62],54,[[[R[2]]],["self"]]],[11,R[84],E,R[62],54,[[[R[2]]],["self"]]],[11,R[59],E,E,55,[[["self"]],[R[2]]]],[11,R[60],E,E,55,[[],[R[2]]]],[11,R[83],E,R[62],55,[[[R[2]]],["self"]]],[11,R[84],E,R[62],55,[[[R[2]]],["self"]]],[11,R[59],E,E,56,[[["self"]],[R[2]]]],[11,R[60],E,E,56,[[],[R[2]]]],[11,R[83],E,R[62],56,[[[R[2]]],["self"]]],[11,R[84],E,R[62],56,[[[R[2]]],["self"]]],[11,R[59],E,E,57,[[["self"]],[R[2]]]],[11,R[60],E,E,57,[[],[R[2]]]],[11,R[83],E,R[62],57,[[[R[2]]],["self"]]],[11,R[84],E,R[62],57,[[[R[2]]],["self"]]],[11,R[59],E,E,58,[[["self"]],[R[2]]]],[11,R[60],E,E,58,[[],[R[2]]]],[11,R[83],E,R[62],58,[[[R[2]]],["self"]]],[11,R[84],E,R[62],58,[[[R[2]]],["self"]]],[11,R[59],E,E,59,[[["self"]],[R[2]]]],[11,R[60],E,E,59,[[],[R[2]]]],[11,R[83],E,R[62],59,[[[R[2]]],["self"]]],[11,R[84],E,R[62],59,[[[R[2]]],["self"]]],[11,R[59],E,E,60,[[["self"]],[R[2]]]],[11,R[60],E,E,60,[[],[R[2]]]],[11,R[83],E,R[62],60,[[[R[2]]],["self"]]],[11,R[84],E,R[62],60,[[[R[2]]],["self"]]],[11,R[59],E,E,61,[[["self"]],[R[2]]]],[11,R[60],E,E,61,[[],[R[2]]]],[11,R[83],E,R[62],61,[[[R[2]]],["self"]]],[11,R[84],E,R[62],61,[[[R[2]]],["self"]]],[11,R[59],E,E,62,[[["self"]],[R[2]]]],[11,R[60],E,E,62,[[],[R[2]]]],[11,R[83],E,R[62],62,[[[R[2]]],["self"]]],[11,R[84],E,R[62],62,[[[R[2]]],["self"]]],[11,R[59],E,E,63,[[["self"]],[R[2]]]],[11,R[60],E,E,63,[[],[R[2]]]],[11,R[83],E,R[62],63,[[[R[2]]],["self"]]],[11,R[84],E,R[62],63,[[[R[2]]],["self"]]],[11,R[59],E,E,64,[[["self"]],[R[2]]]],[11,R[60],E,E,64,[[],[R[2]]]],[11,R[83],E,R[62],64,[[[R[2]]],["self"]]],[11,R[84],E,R[62],64,[[[R[2]]],["self"]]],[11,R[59],E,E,65,[[["self"]],[R[2]]]],[11,R[60],E,E,65,[[],[R[2]]]],[11,R[83],E,R[62],65,[[[R[2]]],["self"]]],[11,R[84],E,R[62],65,[[[R[2]]],["self"]]],[11,R[59],E,E,66,[[["self"]],[R[2]]]],[11,R[60],E,E,66,[[],[R[2]]]],[11,R[83],E,R[62],66,[[[R[2]]],["self"]]],[11,R[84],E,R[62],66,[[[R[2]]],["self"]]],[11,R[59],E,E,67,[[["self"]],[R[2]]]],[11,R[60],E,E,67,[[],[R[2]]]],[11,R[83],E,R[62],67,[[[R[2]]],["self"]]],[11,R[84],E,R[62],67,[[[R[2]]],["self"]]],[11,R[59],E,E,68,[[["self"]],[R[2]]]],[11,R[60],E,E,68,[[],[R[2]]]],[11,R[83],E,R[62],68,[[[R[2]]],["self"]]],[11,R[84],E,R[62],68,[[[R[2]]],["self"]]],[11,R[59],E,E,69,[[["self"]],[R[2]]]],[11,R[60],E,E,69,[[],[R[2]]]],[11,R[83],E,R[62],69,[[[R[2]]],["self"]]],[11,R[84],E,R[62],69,[[[R[2]]],["self"]]],[11,R[59],E,E,70,[[["self"]],[R[2]]]],[11,R[60],E,E,70,[[],[R[2]]]],[11,R[83],E,R[62],70,[[[R[2]]],["self"]]],[11,R[84],E,R[62],70,[[[R[2]]],["self"]]],[11,R[59],E,E,71,[[["self"]],[R[2]]]],[11,R[60],E,E,71,[[],[R[2]]]],[11,R[83],E,R[62],71,[[[R[2]]],["self"]]],[11,R[84],E,R[62],71,[[[R[2]]],["self"]]],[11,R[59],E,E,20,[[["self"]],[R[2]]]],[11,R[60],E,E,20,[[],[R[2]]]],[11,R[83],E,R[62],20,[[[R[2]]],["self"]]],[11,R[84],E,R[62],20,[[[R[2]]],["self"]]],[11,R[59],E,E,72,[[["self"]],[R[2]]]],[11,R[60],E,E,72,[[],[R[2]]]],[11,R[83],E,R[62],72,[[[R[2]]],["self"]]],[11,R[84],E,R[62],72,[[[R[2]]],["self"]]],[11,R[59],E,E,73,[[["self"]],[R[2]]]],[11,R[60],E,E,73,[[],[R[2]]]],[11,R[83],E,R[62],73,[[[R[2]]],["self"]]],[11,R[84],E,R[62],73,[[[R[2]]],["self"]]],[11,R[59],R[45],E,21,[[["self"]],[R[2]]]],[11,R[60],E,E,21,[[],[R[2]]]],[11,R[83],E,R[62],21,[[[R[2]]],["self"]]],[11,R[84],E,R[62],21,[[[R[2]]],["self"]]],[11,R[59],E,E,74,[[["self"]],[R[2]]]],[11,R[60],E,E,74,[[],[R[2]]]],[11,R[83],E,R[62],74,[[[R[2]]],["self"]]],[11,R[84],E,R[62],74,[[[R[2]]],["self"]]],[11,R[85],R[0],E,4,[[[R[2]],[R[7]]],[[R[13]],[R[41],[R[2],R[13]]],[R[2]]]]],[11,R[86],E,E,4,[[[R[2]],[R[7]]],[[R[41],[R[2],R[13]]],[R[13]],[R[2]]]]],[11,R[85],E,E,5,[[[R[7]],[R[2]]],[[R[8]],[R[13]],[R[41],[R[8],R[13]]]]]],[11,R[86],E,E,5,[[[R[7]],[R[2]]],[[R[8]],[R[41],[R[8],R[13]]],[R[13]]]]],[11,R[85],E,E,6,[[[R[7]],[R[2]]],[[R[6]],[R[41],[R[6],R[13]]],[R[13]]]]],[11,R[86],E,E,6,[[[R[7]],[R[2]]],[[R[6]],[R[13]],[R[41],[R[6],R[13]]]]]],[11,R[85],E,E,8,[[[R[7]],[R[2]]],[[R[41],[R[87],R[13]]],[R[87]],[R[13]]]]],[11,R[86],E,E,8,[[[R[7]],[R[2]]],[[R[87]],[R[13]],[R[41],[R[87],R[13]]]]]],[11,R[85],E,E,9,[[[R[7]],[R[2]]],[[R[13]],[R[41],[R[68],R[13]]],[R[68]]]]],[11,R[86],E,E,9,[[[R[7]],[R[2]]],[[R[41],[R[68],R[13]]],[R[13]],[R[68]]]]],[11,R[85],E,E,7,[[[R[2]],[R[7]]],[[R[21]],[R[13]],[R[41],[R[21],R[13]]]]]],[11,R[86],E,E,7,[[[R[2]],[R[7]]],[[R[41],[R[21],R[13]]],[R[13]],[R[21]]]]],[11,R[85],E,E,10,[[[R[7]],[R[2]]],[[R[41],[R[1],R[13]]],[R[13]],[R[1]]]]],[11,R[86],E,E,10,[[[R[7]],[R[2]]],[[R[41],[R[1],R[13]]],[R[1]],[R[13]]]]],[11,R[85],E,E,11,[[[R[7]],[R[2]]],[["pyset"],[R[13]],[R[41],["pyset",R[13]]]]]],[11,R[86],E,E,11,[[[R[7]],[R[2]]],[[R[41],["pyset",R[13]]],[R[13]],["pyset"]]]],[11,R[85],E,E,13,[[[R[7]],[R[2]]],[[R[41],[R[5],R[13]]],[R[5]],[R[13]]]]],[11,R[86],E,E,13,[[[R[7]],[R[2]]],[[R[41],[R[5],R[13]]],[R[13]],[R[5]]]]],[11,R[85],E,E,14,[[[R[7]],[R[2]]],[[R[39]],[R[41],[R[39],R[13]]],[R[13]]]]],[11,R[86],E,E,14,[[[R[7]],[R[2]]],[[R[41],[R[39],R[13]]],[R[13]],[R[39]]]]],[11,R[85],E,E,15,[[[R[7]],[R[2]]],[[R[88]],[R[41],[R[88],R[13]]],[R[13]]]]],[11,R[86],E,E,15,[[[R[7]],[R[2]]],[[R[88]],[R[41],[R[88],R[13]]],[R[13]]]]],[11,R[85],E,E,16,[[[R[7]],[R[2]]],[[R[41],["pyint",R[13]]],[R[13]],["pyint"]]]],[11,R[86],E,E,16,[[[R[7]],[R[2]]],[[R[13]],["pyint"],[R[41],["pyint",R[13]]]]]],[11,R[85],E,E,43,[[[R[7]],[R[2]]],[["pylong"],[R[13]],[R[41],["pylong",R[13]]]]]],[11,R[86],E,E,43,[[[R[7]],[R[2]]],[[R[41],["pylong",R[13]]],[R[13]],["pylong"]]]],[11,R[85],E,E,17,[[[R[7]],[R[2]]],[[R[13]],[R[41],[R[89],R[13]]],[R[89]]]]],[11,R[86],E,E,17,[[[R[7]],[R[2]]],[[R[13]],[R[89]],[R[41],[R[89],R[13]]]]]],[11,R[85],E,E,18,[[[R[7]],[R[2]]],[[R[41],[R[36],R[13]]],[R[13]],[R[36]]]]],[11,R[86],E,E,18,[[[R[7]],[R[2]]],[[R[36]],[R[41],[R[36],R[13]]],[R[13]]]]],[11,R[85],E,E,19,[[[R[7]],[R[2]]],[[R[90]],[R[13]],[R[41],[R[90],R[13]]]]]],[11,R[86],E,E,19,[[[R[7]],[R[2]]],[[R[41],[R[90],R[13]]],[R[13]],[R[90]]]]],[11,R[85],R[43],E,44,[[[R[2]],[R[7]]],[[R[41],[R[91],R[13]]],[R[91]],[R[13]]]]],[11,R[86],E,E,44,[[[R[2]],[R[7]]],[[R[41],[R[91],R[13]]],[R[13]],[R[91]]]]],[11,R[85],E,E,45,[[[R[2]],[R[7]]],[[R[41],[R[92],R[13]]],[R[13]],[R[92]]]]],[11,R[86],E,E,45,[[[R[2]],[R[7]]],[[R[92]],[R[13]],[R[41],[R[92],R[13]]]]]],[11,R[85],E,E,46,[[[R[2]],[R[7]]],[[R[13]],[R[93]],[R[41],[R[93],R[13]]]]]],[11,R[86],E,E,46,[[[R[2]],[R[7]]],[[R[93]],[R[13]],[R[41],[R[93],R[13]]]]]],[11,R[85],E,E,47,[[[R[2]],[R[7]]],[[R[94]],[R[41],[R[94],R[13]]],[R[13]]]]],[11,R[86],E,E,47,[[[R[2]],[R[7]]],[[R[94]],[R[13]],[R[41],[R[94],R[13]]]]]],[11,R[85],E,E,48,[[[R[2]],[R[7]]],[[R[95]],[R[41],[R[95],R[13]]],[R[13]]]]],[11,R[86],E,E,48,[[[R[2]],[R[7]]],[[R[95]],[R[13]],[R[41],[R[95],R[13]]]]]],[11,R[85],E,E,49,[[[R[2]],[R[7]]],[[R[96]],[R[41],[R[96],R[13]]],[R[13]]]]],[11,R[86],E,E,49,[[[R[2]],[R[7]]],[[R[41],[R[96],R[13]]],[R[13]],[R[96]]]]],[11,R[85],E,E,50,[[[R[2]],[R[7]]],[[R[41],[R[97],R[13]]],[R[13]],[R[97]]]]],[11,R[86],E,E,50,[[[R[2]],[R[7]]],[[R[13]],[R[41],[R[97],R[13]]],[R[97]]]]],[11,R[85],E,E,51,[[[R[2]],[R[7]]],[[R[98]],[R[13]],[R[41],[R[98],R[13]]]]]],[11,R[86],E,E,51,[[[R[2]],[R[7]]],[[R[41],[R[98],R[13]]],[R[13]],[R[98]]]]],[11,R[85],E,E,52,[[[R[2]],[R[7]]],[[R[41],[R[99],R[13]]],[R[13]],[R[99]]]]],[11,R[86],E,E,52,[[[R[2]],[R[7]]],[[R[41],[R[99],R[13]]],[R[99]],[R[13]]]]],[11,R[85],E,E,53,[[[R[2]],[R[7]]],[[R[41],[R[125],R[13]]],[R[125]],[R[13]]]]],[11,R[86],E,E,53,[[[R[2]],[R[7]]],[[R[125]],[R[13]],[R[41],[R[125],R[13]]]]]],[11,R[85],E,E,54,[[[R[2]],[R[7]]],[[R[13]],[R[41],[R[100],R[13]]],[R[100]]]]],[11,R[86],E,E,54,[[[R[2]],[R[7]]],[[R[13]],[R[41],[R[100],R[13]]],[R[100]]]]],[11,R[85],E,E,55,[[[R[2]],[R[7]]],[[R[101]],[R[13]],[R[41],[R[101],R[13]]]]]],[11,R[86],E,E,55,[[[R[2]],[R[7]]],[[R[41],[R[101],R[13]]],[R[13]],[R[101]]]]],[11,R[85],E,E,56,[[[R[2]],[R[7]]],[[R[13]],[R[41],[R[102],R[13]]],[R[102]]]]],[11,R[86],E,E,56,[[[R[2]],[R[7]]],[[R[102]],[R[13]],[R[41],[R[102],R[13]]]]]],[11,R[85],E,E,57,[[[R[2]],[R[7]]],[[R[13]],[R[41],[R[103],R[13]]],[R[103]]]]],[11,R[86],E,E,57,[[[R[2]],[R[7]]],[[R[13]],[R[103]],[R[41],[R[103],R[13]]]]]],[11,R[85],E,E,58,[[[R[2]],[R[7]]],[[R[13]],[R[41],[R[104],R[13]]],[R[104]]]]],[11,R[86],E,E,58,[[[R[2]],[R[7]]],[[R[13]],[R[41],[R[104],R[13]]],[R[104]]]]],[11,R[85],E,E,59,[[[R[2]],[R[7]]],[[R[105]],[R[13]],[R[41],[R[105],R[13]]]]]],[11,R[86],E,E,59,[[[R[2]],[R[7]]],[[R[105]],[R[13]],[R[41],[R[105],R[13]]]]]],[11,R[85],E,E,60,[[[R[2]],[R[7]]],[[R[41],[R[106],R[13]]],[R[106]],[R[13]]]]],[11,R[86],E,E,60,[[[R[2]],[R[7]]],[[R[106]],[R[41],[R[106],R[13]]],[R[13]]]]],[11,R[85],E,E,61,[[[R[2]],[R[7]]],[[R[13]],[R[41],[R[126],R[13]]],[R[126]]]]],[11,R[86],E,E,61,[[[R[2]],[R[7]]],[[R[126]],[R[13]],[R[41],[R[126],R[13]]]]]],[11,R[85],E,E,62,[[[R[2]],[R[7]]],[[R[41],[R[107],R[13]]],[R[13]],[R[107]]]]],[11,R[86],E,E,62,[[[R[2]],[R[7]]],[[R[13]],[R[41],[R[107],R[13]]],[R[107]]]]],[11,R[85],E,E,63,[[[R[2]],[R[7]]],[[R[41],[R[108],R[13]]],[R[108]],[R[13]]]]],[11,R[86],E,E,63,[[[R[2]],[R[7]]],[[R[41],[R[108],R[13]]],[R[13]],[R[108]]]]],[11,R[85],E,E,64,[[[R[2]],[R[7]]],[[R[109]],[R[13]],[R[41],[R[109],R[13]]]]]],[11,R[86],E,E,64,[[[R[2]],[R[7]]],[[R[109]],[R[13]],[R[41],[R[109],R[13]]]]]],[11,R[85],E,E,65,[[[R[2]],[R[7]]],[[R[13]],[R[110]],[R[41],[R[110],R[13]]]]]],[11,R[86],E,E,65,[[[R[2]],[R[7]]],[[R[41],[R[110],R[13]]],[R[13]],[R[110]]]]],[11,R[85],E,E,66,[[[R[2]],[R[7]]],[[R[41],[R[111],R[13]]],[R[111]],[R[13]]]]],[11,R[86],E,E,66,[[[R[2]],[R[7]]],[[R[111]],[R[13]],[R[41],[R[111],R[13]]]]]],[11,R[85],E,E,67,[[[R[2]],[R[7]]],[[R[41],[R[112],R[13]]],[R[13]],[R[112]]]]],[11,R[86],E,E,67,[[[R[2]],[R[7]]],[[R[41],[R[112],R[13]]],[R[13]],[R[112]]]]],[11,R[85],E,E,68,[[[R[2]],[R[7]]],[[R[41],[R[113],R[13]]],[R[13]],[R[113]]]]],[11,R[86],E,E,68,[[[R[2]],[R[7]]],[[R[41],[R[113],R[13]]],[R[113]],[R[13]]]]],[11,R[85],E,E,69,[[[R[2]],[R[7]]],[[R[41],[R[114],R[13]]],[R[114]],[R[13]]]]],[11,R[86],E,E,69,[[[R[2]],[R[7]]],[[R[114]],[R[13]],[R[41],[R[114],R[13]]]]]],[11,R[85],E,E,70,[[[R[2]],[R[7]]],[[R[13]],[R[41],[R[115],R[13]]],[R[115]]]]],[11,R[86],E,E,70,[[[R[2]],[R[7]]],[[R[115]],[R[13]],[R[41],[R[115],R[13]]]]]],[11,R[85],E,E,71,[[[R[2]],[R[7]]],[[R[13]],[R[41],[R[116],R[13]]],[R[116]]]]],[11,R[86],E,E,71,[[[R[2]],[R[7]]],[[R[41],[R[116],R[13]]],[R[116]],[R[13]]]]],[11,R[85],E,E,20,[[[R[2]],[R[7]]],[[R[44]],[R[13]],[R[41],[R[44],R[13]]]]]],[11,R[86],E,E,20,[[[R[2]],[R[7]]],[[R[44]],[R[13]],[R[41],[R[44],R[13]]]]]],[11,R[85],E,E,72,[[[R[2]],[R[7]]],[[R[41],[R[117],R[13]]],[R[117]],[R[13]]]]],[11,R[86],E,E,72,[[[R[2]],[R[7]]],[[R[117]],[R[13]],[R[41],[R[117],R[13]]]]]],[11,R[85],E,E,73,[[[R[2]],[R[7]]],[[R[41],[R[118],R[13]]],[R[118]],[R[13]]]]],[11,R[86],E,E,73,[[[R[2]],[R[7]]],[[R[13]],[R[118]],[R[41],[R[118],R[13]]]]]],[11,R[85],R[45],E,21,[[[R[7]],[R[2]]],[[R[127]],[R[41],[R[127],R[13]]],[R[13]]]]],[11,R[86],E,E,21,[[[R[7]],[R[2]]],[[R[41],[R[127],R[13]]],[R[13]],[R[127]]]]],[11,R[85],E,E,74,[[[R[7]],[R[2]]],[[R[13]],[R[41],[R[46],R[13]]],[R[46]]]]],[11,R[86],E,E,74,[[[R[7]],[R[2]]],[[R[41],[R[46],R[13]]],[R[13]],[R[46]]]]],[11,R[119],R[0],E,4,[[[R[7]]],[R[8]]]],[11,R[119],E,E,5,[[[R[7]]],[R[8]]]],[11,R[119],E,E,6,[[[R[7]]],[R[8]]]],[11,R[119],E,E,8,[[[R[7]]],[R[8]]]],[11,R[119],E,E,9,[[[R[7]]],[R[8]]]],[11,R[119],E,E,7,[[[R[7]]],[R[8]]]],[11,R[119],E,E,10,[[[R[7]]],[R[8]]]],[11,R[119],E,E,11,[[[R[7]]],[R[8]]]],[11,R[119],E,E,13,[[[R[7]]],[R[8]]]],[11,R[119],E,E,14,[[[R[7]]],[R[8]]]],[11,R[119],E,E,15,[[[R[7]]],[R[8]]]],[11,R[119],E,E,16,[[[R[7]]],[R[8]]]],[11,R[119],E,E,43,[[[R[7]]],[R[8]]]],[11,R[119],E,E,17,[[[R[7]]],[R[8]]]],[11,R[119],E,E,19,[[[R[7]]],[R[8]]]],[11,R[119],R[43],E,44,[[[R[7]]],[R[8]]]],[11,R[119],E,E,45,[[[R[7]]],[R[8]]]],[11,R[119],E,E,46,[[[R[7]]],[R[8]]]],[11,R[119],E,E,47,[[[R[7]]],[R[8]]]],[11,R[119],E,E,48,[[[R[7]]],[R[8]]]],[11,R[119],E,E,49,[[[R[7]]],[R[8]]]],[11,R[119],E,E,50,[[[R[7]]],[R[8]]]],[11,R[119],E,E,51,[[[R[7]]],[R[8]]]],[11,R[119],E,E,52,[[[R[7]]],[R[8]]]],[11,R[119],E,E,53,[[[R[7]]],[R[8]]]],[11,R[119],E,E,54,[[[R[7]]],[R[8]]]],[11,R[119],E,E,55,[[[R[7]]],[R[8]]]],[11,R[119],E,E,56,[[[R[7]]],[R[8]]]],[11,R[119],E,E,57,[[[R[7]]],[R[8]]]],[11,R[119],E,E,58,[[[R[7]]],[R[8]]]],[11,R[119],E,E,59,[[[R[7]]],[R[8]]]],[11,R[119],E,E,60,[[[R[7]]],[R[8]]]],[11,R[119],E,E,61,[[[R[7]]],[R[8]]]],[11,R[119],E,E,62,[[[R[7]]],[R[8]]]],[11,R[119],E,E,63,[[[R[7]]],[R[8]]]],[11,R[119],E,E,64,[[[R[7]]],[R[8]]]],[11,R[119],E,E,65,[[[R[7]]],[R[8]]]],[11,R[119],E,E,66,[[[R[7]]],[R[8]]]],[11,R[119],E,E,67,[[[R[7]]],[R[8]]]],[11,R[119],E,E,68,[[[R[7]]],[R[8]]]],[11,R[119],E,E,69,[[[R[7]]],[R[8]]]],[11,R[119],E,E,70,[[[R[7]]],[R[8]]]],[11,R[119],E,E,71,[[[R[7]]],[R[8]]]],[11,R[119],E,E,20,[[[R[7]]],[R[8]]]],[11,R[119],E,E,72,[[[R[7]]],[R[8]]]],[11,R[119],E,E,73,[[[R[7]]],[R[8]]]],[11,R[119],R[45],E,21,[[[R[7]]],[R[8]]]],[11,R[119],E,E,74,[[[R[7]]],[R[8]]]],[11,R[120],R[0],E,0,[[["self"],[R[7]]],[R[9]]]],[11,R[121],E,E,0,[[[R[7]]]]],[11,R[121],R[49],E,27,[[[R[7]]]]],[11,R[122],R[0],E,4,[[["self"],[R[7]]],[R[2]]]],[11,R[123],E,E,4,[[[R[7]]],[R[2]]]],[11,R[124],E,E,4,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,5,[[["self"],[R[7]]],[R[8]]]],[11,R[123],E,E,5,[[[R[7]]],[R[8]]]],[11,R[124],E,E,5,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,6,[[["self"],[R[7]]],[R[6]]]],[11,R[123],E,E,6,[[[R[7]]],[R[6]]]],[11,R[124],E,E,6,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,7,[[["self"],[R[7]]],[R[21]]]],[11,R[123],E,E,7,[[[R[7]]],[R[21]]]],[11,R[124],E,E,7,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,8,[[["self"],[R[7]]],[R[87]]]],[11,R[123],E,E,8,[[[R[7]]],[R[87]]]],[11,R[124],E,E,8,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,9,[[["self"],[R[7]]],[R[68]]]],[11,R[123],E,E,9,[[[R[7]]],[R[68]]]],[11,R[124],E,E,9,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,10,[[["self"],[R[7]]],[R[1]]]],[11,R[123],E,E,10,[[[R[7]]],[R[1]]]],[11,R[124],E,E,10,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,11,[[["self"],[R[7]]],["pyset"]]],[11,R[123],E,E,11,[[[R[7]]],["pyset"]]],[11,R[124],E,E,11,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,13,[[["self"],[R[7]]],[R[5]]]],[11,R[123],E,E,13,[[[R[7]]],[R[5]]]],[11,R[124],E,E,13,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,14,[[["self"],[R[7]]],[R[39]]]],[11,R[123],E,E,14,[[[R[7]]],[R[39]]]],[11,R[124],E,E,14,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,42,[[["self"],[R[7]]],[R[39]]]],[11,R[122],E,E,15,[[["self"],[R[7]]],[R[88]]]],[11,R[123],E,E,15,[[[R[7]]],[R[88]]]],[11,R[124],E,E,15,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,16,[[["self"],[R[7]]],["pyint"]]],[11,R[123],E,E,16,[[[R[7]]],["pyint"]]],[11,R[124],E,E,16,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,43,[[["self"],[R[7]]],["pylong"]]],[11,R[123],E,E,43,[[[R[7]]],["pylong"]]],[11,R[124],E,E,43,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,17,[[["self"],[R[7]]],[R[89]]]],[11,R[123],E,E,17,[[[R[7]]],[R[89]]]],[11,R[124],E,E,17,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,18,[[["self"],[R[7]]],[R[36]]]],[11,R[123],E,E,18,[[[R[7]]],[R[36]]]],[11,R[124],E,E,18,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,19,[[["self"],[R[7]]],[R[90]]]],[11,R[123],E,E,19,[[[R[7]]],[R[90]]]],[11,R[124],E,E,19,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],R[43],E,44,[[["self"],[R[7]]],[R[91]]]],[11,R[123],E,E,44,[[[R[7]]],[R[91]]]],[11,R[124],E,E,44,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,45,[[["self"],[R[7]]],[R[92]]]],[11,R[123],E,E,45,[[[R[7]]],[R[92]]]],[11,R[124],E,E,45,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,46,[[["self"],[R[7]]],[R[93]]]],[11,R[123],E,E,46,[[[R[7]]],[R[93]]]],[11,R[124],E,E,46,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,47,[[["self"],[R[7]]],[R[94]]]],[11,R[123],E,E,47,[[[R[7]]],[R[94]]]],[11,R[124],E,E,47,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,48,[[["self"],[R[7]]],[R[95]]]],[11,R[123],E,E,48,[[[R[7]]],[R[95]]]],[11,R[124],E,E,48,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,49,[[["self"],[R[7]]],[R[96]]]],[11,R[123],E,E,49,[[[R[7]]],[R[96]]]],[11,R[124],E,E,49,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,50,[[["self"],[R[7]]],[R[97]]]],[11,R[123],E,E,50,[[[R[7]]],[R[97]]]],[11,R[124],E,E,50,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,51,[[["self"],[R[7]]],[R[98]]]],[11,R[123],E,E,51,[[[R[7]]],[R[98]]]],[11,R[124],E,E,51,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,52,[[["self"],[R[7]]],[R[99]]]],[11,R[123],E,E,52,[[[R[7]]],[R[99]]]],[11,R[124],E,E,52,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,53,[[["self"],[R[7]]],[R[125]]]],[11,R[123],E,E,53,[[[R[7]]],[R[125]]]],[11,R[124],E,E,53,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,54,[[["self"],[R[7]]],[R[100]]]],[11,R[123],E,E,54,[[[R[7]]],[R[100]]]],[11,R[124],E,E,54,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,55,[[["self"],[R[7]]],[R[101]]]],[11,R[123],E,E,55,[[[R[7]]],[R[101]]]],[11,R[124],E,E,55,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,56,[[["self"],[R[7]]],[R[102]]]],[11,R[123],E,E,56,[[[R[7]]],[R[102]]]],[11,R[124],E,E,56,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,57,[[["self"],[R[7]]],[R[103]]]],[11,R[123],E,E,57,[[[R[7]]],[R[103]]]],[11,R[124],E,E,57,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,58,[[["self"],[R[7]]],[R[104]]]],[11,R[123],E,E,58,[[[R[7]]],[R[104]]]],[11,R[124],E,E,58,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,59,[[["self"],[R[7]]],[R[105]]]],[11,R[123],E,E,59,[[[R[7]]],[R[105]]]],[11,R[124],E,E,59,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,60,[[["self"],[R[7]]],[R[106]]]],[11,R[123],E,E,60,[[[R[7]]],[R[106]]]],[11,R[124],E,E,60,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,61,[[["self"],[R[7]]],[R[126]]]],[11,R[123],E,E,61,[[[R[7]]],[R[126]]]],[11,R[124],E,E,61,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,62,[[["self"],[R[7]]],[R[107]]]],[11,R[123],E,E,62,[[[R[7]]],[R[107]]]],[11,R[124],E,E,62,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,63,[[["self"],[R[7]]],[R[108]]]],[11,R[123],E,E,63,[[[R[7]]],[R[108]]]],[11,R[124],E,E,63,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,64,[[["self"],[R[7]]],[R[109]]]],[11,R[123],E,E,64,[[[R[7]]],[R[109]]]],[11,R[124],E,E,64,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,65,[[["self"],[R[7]]],[R[110]]]],[11,R[123],E,E,65,[[[R[7]]],[R[110]]]],[11,R[124],E,E,65,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,66,[[["self"],[R[7]]],[R[111]]]],[11,R[123],E,E,66,[[[R[7]]],[R[111]]]],[11,R[124],E,E,66,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,67,[[["self"],[R[7]]],[R[112]]]],[11,R[123],E,E,67,[[[R[7]]],[R[112]]]],[11,R[124],E,E,67,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,68,[[["self"],[R[7]]],[R[113]]]],[11,R[123],E,E,68,[[[R[7]]],[R[113]]]],[11,R[124],E,E,68,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,69,[[["self"],[R[7]]],[R[114]]]],[11,R[123],E,E,69,[[[R[7]]],[R[114]]]],[11,R[124],E,E,69,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,70,[[["self"],[R[7]]],[R[115]]]],[11,R[123],E,E,70,[[[R[7]]],[R[115]]]],[11,R[124],E,E,70,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,71,[[["self"],[R[7]]],[R[116]]]],[11,R[123],E,E,71,[[[R[7]]],[R[116]]]],[11,R[124],E,E,71,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,20,[[["self"],[R[7]]],[R[44]]]],[11,R[123],E,E,20,[[[R[7]]],[R[44]]]],[11,R[124],E,E,20,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,72,[[["self"],[R[7]]],[R[117]]]],[11,R[123],E,E,72,[[[R[7]]],[R[117]]]],[11,R[124],E,E,72,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,73,[[["self"],[R[7]]],[R[118]]]],[11,R[123],E,E,73,[[[R[7]]],[R[118]]]],[11,R[124],E,E,73,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],R[45],E,21,[[["self"],[R[7]]],[R[127]]]],[11,R[123],E,E,21,[[[R[7]]],[R[127]]]],[11,R[124],E,E,21,[[["self"],[R[7]],["f"]],["r"]]],[11,R[122],E,E,74,[[["self"],[R[7]]],[R[46]]]],[11,R[123],E,E,74,[[[R[7]]],[R[46]]]],[11,R[124],E,E,74,[[["self"],[R[7]],["f"]],["r"]]],[11,R[128],R[0],E,4,[[[R[7]],[R[2]]],[[R[4],[R[2]]],[R[2]]]]],[11,R[128],E,E,5,[[[R[7]],[R[2]]],[[R[4],[R[8]]],[R[8]]]]],[11,R[128],E,E,6,[[[R[7]],[R[2]]],[[R[6]],[R[4],[R[6]]]]]],[11,R[128],E,E,7,[[[R[7]],[R[2]]],[[R[4],[R[21]]],[R[21]]]]],[11,R[128],E,E,8,[[[R[7]],[R[2]]],[[R[87]],[R[4],[R[87]]]]]],[11,R[128],E,E,9,[[[R[7]],[R[2]]],[[R[4],[R[68]]],[R[68]]]]],[11,R[128],E,E,10,[[[R[7]],[R[2]]],[[R[4],[R[1]]],[R[1]]]]],[11,R[128],E,E,11,[[[R[7]],[R[2]]],[["pyset"],[R[4],["pyset"]]]]],[11,R[128],E,E,13,[[[R[7]],[R[2]]],[[R[5]],[R[4],[R[5]]]]]],[11,R[128],E,E,14,[[[R[7]],[R[2]]],[[R[4],[R[39]]],[R[39]]]]],[11,R[128],E,"Returns `Ok(NoArgs)` if the input is an empty Python…",42,[[[R[2]],[R[7]]],[R[4]]]],[11,R[128],E,E,15,[[[R[7]],[R[2]]],[[R[88]],[R[4],[R[88]]]]]],[11,R[128],E,E,16,[[[R[7]],[R[2]]],[[R[4],["pyint"]],["pyint"]]]],[11,R[128],E,E,43,[[[R[7]],[R[2]]],[[R[4],["pylong"]],["pylong"]]]],[11,R[128],E,E,17,[[[R[7]],[R[2]]],[[R[4],[R[89]]],[R[89]]]]],[11,R[128],E,E,18,[[[R[7]],[R[2]]],[[R[4],[R[36]]],[R[36]]]]],[11,R[128],E,E,19,[[[R[7]],[R[2]]],[[R[4],[R[90]]],[R[90]]]]],[11,R[128],R[43],E,44,[[[R[7]],[R[2]]],[[R[4],[R[91]]],[R[91]]]]],[11,R[128],E,E,45,[[[R[7]],[R[2]]],[[R[4],[R[92]]],[R[92]]]]],[11,R[128],E,E,46,[[[R[7]],[R[2]]],[[R[4],[R[93]]],[R[93]]]]],[11,R[128],E,E,47,[[[R[7]],[R[2]]],[[R[94]],[R[4],[R[94]]]]]],[11,R[128],E,E,48,[[[R[7]],[R[2]]],[[R[95]],[R[4],[R[95]]]]]],[11,R[128],E,E,49,[[[R[7]],[R[2]]],[[R[4],[R[96]]],[R[96]]]]],[11,R[128],E,E,50,[[[R[7]],[R[2]]],[[R[4],[R[97]]],[R[97]]]]],[11,R[128],E,E,51,[[[R[7]],[R[2]]],[[R[4],[R[98]]],[R[98]]]]],[11,R[128],E,E,52,[[[R[7]],[R[2]]],[[R[4],[R[99]]],[R[99]]]]],[11,R[128],E,E,53,[[[R[7]],[R[2]]],[[R[125]],[R[4],[R[125]]]]]],[11,R[128],E,E,54,[[[R[7]],[R[2]]],[[R[4],[R[100]]],[R[100]]]]],[11,R[128],E,E,55,[[[R[7]],[R[2]]],[[R[4],[R[101]]],[R[101]]]]],[11,R[128],E,E,56,[[[R[7]],[R[2]]],[[R[102]],[R[4],[R[102]]]]]],[11,R[128],E,E,57,[[[R[7]],[R[2]]],[[R[4],[R[103]]],[R[103]]]]],[11,R[128],E,E,58,[[[R[7]],[R[2]]],[[R[104]],[R[4],[R[104]]]]]],[11,R[128],E,E,59,[[[R[7]],[R[2]]],[[R[4],[R[105]]],[R[105]]]]],[11,R[128],E,E,60,[[[R[7]],[R[2]]],[[R[4],[R[106]]],[R[106]]]]],[11,R[128],E,E,61,[[[R[7]],[R[2]]],[[R[4],[R[126]]],[R[126]]]]],[11,R[128],E,E,62,[[[R[7]],[R[2]]],[[R[107]],[R[4],[R[107]]]]]],[11,R[128],E,E,63,[[[R[7]],[R[2]]],[[R[108]],[R[4],[R[108]]]]]],[11,R[128],E,E,64,[[[R[7]],[R[2]]],[[R[4],[R[109]]],[R[109]]]]],[11,R[128],E,E,65,[[[R[7]],[R[2]]],[[R[110]],[R[4],[R[110]]]]]],[11,R[128],E,E,66,[[[R[7]],[R[2]]],[[R[4],[R[111]]],[R[111]]]]],[11,R[128],E,E,67,[[[R[7]],[R[2]]],[[R[4],[R[112]]],[R[112]]]]],[11,R[128],E,E,68,[[[R[7]],[R[2]]],[[R[4],[R[113]]],[R[113]]]]],[11,R[128],E,E,69,[[[R[7]],[R[2]]],[[R[114]],[R[4],[R[114]]]]]],[11,R[128],E,E,70,[[[R[7]],[R[2]]],[[R[4],[R[115]]],[R[115]]]]],[11,R[128],E,E,71,[[[R[7]],[R[2]]],[[R[4],[R[116]]],[R[116]]]]],[11,R[128],E,E,20,[[[R[7]],[R[2]]],[[R[44]],[R[4],[R[44]]]]]],[11,R[128],E,E,72,[[[R[7]],[R[2]]],[[R[117]],[R[4],[R[117]]]]]],[11,R[128],E,E,73,[[[R[7]],[R[2]]],[[R[118]],[R[4],[R[118]]]]]],[11,R[128],R[45],E,21,[[[R[7]],[R[2]]],[[R[4],[R[127]]],[R[127]]]]],[11,R[128],E,E,74,[[[R[7]],[R[2]]],[[R[46]],[R[4],[R[46]]]]]],[11,"size",R[0],E,4,[[],["usize"]]],[11,"alloc",E,E,4,[[[R[7]],[R[8]]],[[R[4],[R[2]]],[R[2]]]]],[11,"dealloc",E,E,4,[[[R[7]]]]],[11,"next",E,"Retrieves the next item from an iterator. Returns `None`…",12,[[["self"]],[[R[3],[R[4]]],[R[4],[R[2]]]]]],[11,"eq",E,E,4,[[["self"],[R[2]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[8]]],["bool"]]],[11,"eq",R[49],E,25,[[["self"],[R[129]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[129]]],["bool"]]],[11,"from",R[0],E,0,[[[R[13]]],[R[9]]]],[11,"from",E,E,2,[[["str"]],[R[27]]]],[11,"from",E,E,2,[[],[R[27]]]],[11,"from",E,E,2,[[],[R[27]]]],[11,"clone",E,E,3,[[["self"]],[R[7]]]],[11,"clone",E,E,2,[[["self"]],[R[27]]]],[11,"clone",E,E,42,[[["self"]],["noargs"]]],[11,"clone",R[49],E,25,[[["self"]],[R[129]]]],[11,"clone",R[82],E,30,[[["self"]],["visitproc"]]],[11,"drop",R[0],E,4,[[["self"]]]],[11,"drop",E,E,22,[[["self"]]]],[11,"drop",R[49],E,27,[[["self"]]]],[11,"fmt",R[0],E,4,[[["self"],[R[130]]],[[R[41],["error"]],["error"]]]],[11,"fmt",E,E,1,[[[R[130]],["self"]],[[R[41],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[130]]],[R[41]]]],[11,"fmt",E,E,2,[[["self"],[R[130]]],[R[41]]]],[11,"fmt",E,E,42,[[["self"],[R[130]]],[R[41]]]],[11,"fmt",E,E,4,[[["self"],[R[130]]],[[R[41],["error"]],["error"]]]],[11,"fmt",R[58],E,29,[[["self"],[R[130]]],[R[41]]]],[11,R[123],R[0],R[64],40,[[[R[7]]]]],[11,R[124],E,R[131],40,[[["self"],[R[7]],["f"]],["r"]]],[11,"hasattr",E,R[132],41,[[["self"],[R[7]],["n"]],[[R[4],["bool"]],["bool"]]]],[11,"getattr",E,R[133],41,[[["self"],[R[7]],["n"]],[[R[4],[R[2]]],[R[2]]]]],[11,"setattr",E,R[134],41,[[[R[7]],["n"],["self"],["v"]],[R[4]]]],[11,"delattr",E,R[135],41,[[["self"],[R[7]],["n"]],[R[4]]]],[11,"compare",E,R[66],41,[[["self"],[R[7]],["o"]],[[R[4],[R[65]]],[R[65]]]]],[11,R[136],E,R[66],41,[[["o"],[R[7]],[R[137]],["self"]],[[R[4],[R[2]]],[R[2]]]]],[11,"repr",E,R[67],41,[[["self"],[R[7]]],[[R[21]],[R[4],[R[21]]]]]],[11,"str",E,R[67],41,[[["self"],[R[7]]],[[R[21]],[R[4],[R[21]]]]]],[11,"unistr",E,R[138],41,[[["self"],[R[7]]],[[R[4],[R[68]]],[R[68]]]]],[11,R[139],E,R[140],41,[[["self"],[R[7]]],["bool"]]],[11,"call",E,R[141],41,[[["a"],[R[3],[R[1]]],[R[7]],[R[1]],["self"]],[[R[4],[R[2]]],[R[2]]]]],[11,R[142],E,R[143],41,[[["a"],[R[3],[R[1]]],[R[7]],["str"],[R[1]],["self"]],[[R[4],[R[2]]],[R[2]]]]],[11,"hash",E,R[144],41,[[["self"],[R[7]]],[[R[4],[R[69]]],[R[69]]]]],[11,"is_true",E,R[145],41,[[["self"],[R[7]]],[[R[4],["bool"]],["bool"]]]],[11,"len",E,R[146],41,[[["self"],[R[7]]],[["usize"],[R[4],["usize"]]]]],[11,R[32],E,R[147],41,[[["self"],[R[7]],["k"]],[[R[4],[R[2]]],[R[2]]]]],[11,R[34],E,R[70],41,[[[R[7]],["self"],["k"],["v"]],[R[4]]]],[11,R[38],E,R[71],41,[[["self"],[R[7]],["k"]],[R[4]]]],[11,"iter",E,R[148],41,[[["self"],[R[7]]],[[R[30]],[R[4],[R[30]]]]]]],"p":[[3,"PyErr"],[3,R[149]],[4,R[150]],[3,"Python"],[3,"PyObject"],[3,"PyType"],[3,"PyModule"],[3,"PyString"],[3,"PyBytes"],[3,R[151]],[3,"PyDict"],[3,"PySet"],[3,R[152]],[3,"PyBool"],[3,"PyTuple"],[3,"PyList"],[3,"PyInt"],[3,"PyFloat"],[3,R[153]],[3,R[154]],[3,R[155]],[3,"PyClass"],[3,"GILGuard"],[3,R[156]],[3,R[157]],[4,R[158]],[8,"Element"],[3,"PyBuffer"],[3,R[159]],[4,R[160]],[3,R[161]],[8,R[162]],[8,R[163]],[8,R[164]],[8,R[165]],[8,R[166]],[8,"PyClone"],[8,"PyDrop"],[8,R[167]],[8,R[168]],[8,R[169]],[8,R[170]],[3,"NoArgs"],[3,"PyLong"],[3,R[171]],[3,R[172]],[3,R[173]],[3,R[174]],[3,R[175]],[3,R[176]],[3,"EOFError"],[3,R[177]],[3,R[178]],[3,"IOError"],[3,R[179]],[3,R[180]],[3,"KeyError"],[3,R[181]],[3,R[182]],[3,R[183]],[3,R[184]],[3,"OSError"],[3,R[185]],[3,R[186]],[3,R[187]],[3,R[188]],[3,R[189]],[3,R[190]],[3,R[191]],[3,R[192]],[3,R[193]],[3,R[194]],[3,R[195]],[3,R[196]],[3,R[197]],[3,R[198]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);